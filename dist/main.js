(()=>{"use strict";var e,t="http://172.16.115.168:80",o=function(e,t,o){var n=JSON.stringify(o),s=new Headers;s.append("Content-Type","application/json"),s.append("Data-Body",n);var r={method:"GET",headers:s,redirect:"follow"};try{fetch(e,r).then((function(e){return e.json()})).then((function(e){return t(e)})).catch((function(e){return t(e,!0)}))}catch(e){t(e,!0)}},n=function(e,t,o){var n=JSON.stringify(t),s=new Headers;s.append("Content-Type","application/json");try{fetch(e,{method:"POST",headers:s,body:n,redirect:"follow"}).then((function(e){return e.json()})).then((function(e){return o(e)})).catch((function(e){return o(e,!0)}))}catch(e){o(e,!0)}},s={createRoom:document.getElementById("create-room"),roomSearch:document.getElementById("room-search"),roomList:document.getElementById("room-list-container"),usernameDisplay:document.getElementById("username-display"),logOut:document.getElementById("log-out"),roomTitle:document.getElementById("room-title"),chatList:document.getElementById("chat-list-container"),chatField:document.getElementById("chat-field"),popup:document.getElementById("popup"),popupForm:document.getElementById("popup-form")},r=function(){s.chatField.addEventListener("keypress",(function(e){sessionStorage.getItem("roomId")&&"undefined"!==sessionStorage.getItem("roomId")&&"Enter"===e.key&&n(t+"/api/messages/post",{token:sessionStorage.getItem("token"),roomId:sessionStorage.getItem("roomId"),message:s.chatField.value},(function(e){if(e.success&&"success"===e.response){var t=document.createElement("div");t.textContent=s.chatField.value,t.className="chat right",s.chatList.appendChild(t),s.chatField.value=""}}))}))},a=function(e){s.roomTitle.textContent=e.name,s.chatList.innerHTML="",o(t+"/api/messages/getlist",(function(e){for(var t in e.messages){var o=document.createElement("div");e.messages[t].author===sessionStorage.getItem("userId")?(o.textContent=e.messages[t].message,o.className="chat right"):(o.textContent="["+e.messages[t].author+"]: "+e.messages[t].message,o.className="chat left"),s.chatList.appendChild(o)}}),{messages:e.messages})},i=function(){s.createRoom.addEventListener("click",(function(){d("createRoom")})),m()},m=function(){s.roomList.innerHTML="";var n=sessionStorage.getItem("token");n&&o(t+"/api/rooms/getuser",(function(r){if(!r.success)return console.warn("error getting user: "+r.response);o(t+"/api/rooms/getlist",(function(t){if(!t.success)return console.warn("error getting roomlist: "+t.response);for(var o=function(o){var n=document.createElement("button");n.className="room",n.textContent=t.rooms[o].name,s.roomList.appendChild(n),n.addEventListener("click",(function(){e!=n&&(e.className="room",n.className="room active",e=n,sessionStorage.setItem("roomId",t.rooms[o].roomId),a(t.rooms[o]))})),0!==o||sessionStorage.getItem("roomId")&&"undefined"!==sessionStorage.getItem("roomId")?t.rooms[o].roomId===sessionStorage.getItem("roomId")&&(n.className="room active",e=n,sessionStorage.setItem("roomId",t.rooms[o].roomId),a(t.rooms[o])):(n.className="room active",e=n,sessionStorage.setItem("roomId",t.rooms[o].roomId),a(t.rooms[o]))},n=0;n<t.rooms.length;n++)o(n)}),{token:n,rooms:r.rooms})}),{token:n,relation:["joined","created"],types:["public","hidden","private"]})},c={login:{title:"login",objects:[{name:"username"},{name:"password",type:"password"}],api:t+"/api/users/login",created:function(){var e=document.createElement("a");e.textContent="sign up?",e.addEventListener("click",(function(){d("register")}),{once:!0}),s.popupForm.appendChild(e)},completed:function(e){return sessionStorage.setItem("username",e.username),sessionStorage.setItem("userId",e.userId),sessionStorage.setItem("token",e.token),sessionStorage.removeItem("roomId"),i(),p(),r(),!0}},register:{title:"register",objects:[{name:"username"},{name:"email",type:"email"},{name:"password",type:"password"}],api:t+"/api/users/register",created:function(){var e=document.createElement("a");e.textContent="login?",e.addEventListener("click",(function(){d("login")}),{once:!0}),s.popupForm.appendChild(e)},completed:function(){return d("login")}},createRoom:{title:"create room",objects:[{name:"name",label:"room name"},{name:"description"},{name:"status",label:"type (public/hidden/private)"},{name:"password (leave blank if public)",type:"password"}],api:t+"/api/rooms/create",created:function(){var e=document.createElement("button");e.textContent="cancel",e.addEventListener("click",(function(){s.popupForm.innerHTML="",s.popup.className="hidden"}),{once:!0}),s.popupForm.appendChild(e)}},joinRoom:{title:"join room",objects:[{name:"password",type:"password"}],api:t+"/api/rooms/join"}},d=function(e,t){s.popup.className="",c[e]||(s.popupForm.innerHTML="form inputs of name "+e+" not available.",console.error("form inputs of name "+e+" not available.")),s.popupForm.innerHTML=c[e].title+(t?"\n"+t:"");for(var o=c[e].objects,r={},a=0;a<o.length;a++){var i="temp-"+o[a].name+"-("+Math.random()+")",m=document.createElement("label");m.htmlFor=i,m.textContent=o[a].label||o[a].name;var p=document.createElement("input");p.id=i,p.placeholder="...",p.type=o[a].type||"text",s.popupForm.append(m,p),r[o[a].name]=p}c[e].created&&c[e].created();var u=document.createElement("button");return u.textContent=c[e].title,s.popupForm.appendChild(u),u.addEventListener("click",(function(){var t={token:sessionStorage.getItem("token")};for(var o in r)t[o]=r[o].value;n(c[e].api,t,(function(t){return t.success?(s.popup.className="hidden",c[e].completed?c[e].completed(t):void 0):d(e,t.response)}))}),{once:!0}),!0},p=function(){sessionStorage.getItem("username")&&(s.usernameDisplay.textContent=sessionStorage.getItem("username")),s.logOut.addEventListener("click",(function(){sessionStorage.getItem("token")&&n(t+"/api/users/logout",{token:sessionStorage.getItem("token")},(function(){s.roomList.innerHTML="",s.chatList.innerHTML="",sessionStorage.removeItem("token"),d("login")}))}))};sessionStorage.getItem("token")?n(t+"/api/users/checktoken",{token:sessionStorage.getItem("token")},(function(e){!0!==e.success||"success"!==e.response?d("login","expired"===e.response?"session expired":void 0):(i(),p(),r(),s.popup.className="hidden")})):d("login")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,