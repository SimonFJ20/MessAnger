(()=>{"use strict";var e="http://178.157.218.63:25565",t={createRoom:document.getElementById("create-room"),roomSearch:document.getElementById("room-search"),roomList:document.getElementById("room-list-container"),usernameDisplay:document.getElementById("username-display"),logOut:document.getElementById("log-out"),roomTitle:document.getElementById("room-title"),chatList:document.getElementById("chat-list-container"),chatField:document.getElementById("chat-field"),popup:document.getElementById("popup"),popupForm:document.getElementById("popup-form")},n={login:{title:"login",objects:[{name:"username"},{name:"password",type:"password"}],api:e+"/api/users/login",created:function(){var e=document.createElement("a");e.textContent="sign up?",e.addEventListener("click",(function(){o("register")}),{once:!0}),t.popupForm.appendChild(e)},completed:function(e){return sessionStorage.setItem("userToken",e.token)}},register:{title:"register",objects:[{name:"username"},{name:"email",type:"mail"},{name:"password",type:"password"}],api:e+"/api/users/register",created:function(){var e=document.createElement("a");e.textContent="login?",e.addEventListener("click",(function(){o("login")}),{once:!0}),t.popupForm.appendChild(e)},completed:function(){return o("login")}},createRoom:{title:"create room",objects:[{name:"name"},{name:"password",type:"password"}],api:e+"/api/rooms/create"},joinRoom:{title:"join room",objects:[{name:"password",type:"password"}],api:e+"/api/rooms/join"}},o=function(e,r){t.popup.className="",n[e]||(t.popupForm.innerHTML="form inputs of name "+e+" not available.",console.error("form inputs of name "+e+" not available.")),t.popupForm.innerHTML=n[e].title+(r?"\n"+r:"");for(var a=n[e].objects,p={},m=0;m<a.length;m++){var i="temp-"+a[m].name+"-("+Math.random()+")",c=document.createElement("label");c.htmlFor=i,c.textContent=a[m].name;var s=document.createElement("input");s.id=i,s.placeholder="...",s.type=a[m].type||"text",t.popupForm.append(c,s),p[a[m].name]=s}n[e].created&&n[e].created();var d=document.createElement("button");return d.textContent=n[e].title,t.popupForm.appendChild(d),d.addEventListener("click",(function(){var r={token:sessionStorage.getItem("userToken")};for(var a in p)r[a]=p[a].value;!function(e,t,n){var o=JSON.stringify(t),r=new Headers;r.append("Content-Type","application/json");try{fetch(e,{method:"POST",headers:r,body:o,redirect:"follow"}).then((function(e){return e.json()})).then((function(e){return n(e)})).catch((function(e){return n(e)}))}catch(e){n(e)}}(n[e].api,r,(function(r){return r.success?(t.popup.className="hidden",n[e].completed?n[e].completed(r):void 0):o(e,r.response)}))}),{once:!0}),!0};o("login")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,