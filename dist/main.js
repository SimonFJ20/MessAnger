(()=>{"use strict";var e,t="http://172.16.115.168:80",o=function(e,t,o){var n=JSON.stringify(o),s=new Headers;s.append("Content-Type","application/json"),s.append("Data-Body",n);var r={method:"GET",headers:s,redirect:"follow"};try{fetch(e,r).then((function(e){return e.json()})).then((function(e){return t(e)})).catch((function(e){return t(e,!0)}))}catch(e){t(e,!0)}},n=function(e,t,o){var n=JSON.stringify(t),s=new Headers;s.append("Content-Type","application/json");try{fetch(e,{method:"POST",headers:s,body:n,redirect:"follow"}).then((function(e){return e.json()})).then((function(e){return o(e)})).catch((function(e){return o(e,!0)}))}catch(e){o(e,!0)}},s={createRoom:document.getElementById("create-room"),roomSearch:document.getElementById("room-search"),roomList:document.getElementById("room-list-container"),usernameDisplay:document.getElementById("username-display"),logOut:document.getElementById("log-out"),roomTitle:document.getElementById("room-title"),chatList:document.getElementById("chat-list-container"),chatField:document.getElementById("chat-field"),popup:document.getElementById("popup"),popupForm:document.getElementById("popup-form")},r=function(){s.chatField.addEventListener("keypress",(function(e){sessionStorage.getItem("roomId")&&"undefined"!==sessionStorage.getItem("roomId")&&"Enter"===e.key&&n(t+"/api/messages/post",{token:sessionStorage.getItem("token"),roomId:sessionStorage.getItem("roomId"),message:s.chatField.value},(function(e){if(e.success&&"success"===e.response){var t=document.createElement("div");t.textContent=s.chatField.value,t.className="chat right",s.chatList.appendChild(t),s.chatField.value=""}}))}))},a=function(e){s.roomTitle.textContent=e.name,s.chatList.innerHTML="",o(t+"/api/messages/getlist",(function(e){for(var t in e.messages){var o=document.createElement("div");e.messages[t].author===sessionStorage.getItem("userId")?(o.textContent=e.messages[t].message,o.className="chat right"):(o.textContent="["+e.messages[t].author+"]: "+e.messages[t].message,o.className="chat left"),s.chatList.appendChild(o)}}),{messages:e.messages})},i=function(){s.createRoom.addEventListener("click",(function(){d("createRoom")})),m()},m=function(){s.roomList.innerHTML="";var n=sessionStorage.getItem("token");n&&o(t+"/api/rooms/getuser",(function(r){if(!r.success)return console.warn("error getting user: "+r.response);o(t+"/api/rooms/getlist",(function(t){if(!t.success)return console.warn("error getting roomlist: "+t.response);for(var o=function(o){var n=document.createElement("button");n.className="room",n.textContent=t.rooms[o].name,s.roomList.appendChild(n),n.addEventListener("click",(function(){e!=n&&(e.className="room",n.className="room active",e=n,sessionStorage.setItem("roomId",t.rooms[o].roomId),a(t.rooms[o]))})),0!==o||sessionStorage.getItem("roomId")&&"undefined"!==sessionStorage.getItem("roomId")?t.rooms[o].roomId===sessionStorage.getItem("roomId")&&(n.className="room active",e=n,sessionStorage.setItem("roomId",t.rooms[o].roomId),a(t.rooms[o])):(n.className="room active",e=n,sessionStorage.setItem("roomId",t.rooms[o].roomId),a(t.rooms[o]))},n=0;n<t.rooms.length;n++)o(n)}),{token:n,rooms:r.rooms})}),{token:n,relation:["joined","created"],types:["public","hidden","private"]})},c={login:{title:"login",objects:[{name:"username"},{name:"password",type:"password"}],api:t+"/api/users/login",created:function(){var e=document.createElement("a");e.textContent="sign up?",e.addEventListener("click",(function(){d("register")}),{once:!0}),s.popupForm.appendChild(e)},completed:function(e){return sessionStorage.setItem("username",e.username),sessionStorage.setItem("userId",e.userId),sessionStorage.setItem("token",e.token),sessionStorage.removeItem("roomId"),i(),p(),r(),!0}},register:{title:"register",objects:[{name:"username"},{name:"email",type:"email"},{name:"password",type:"password"}],api:t+"/api/users/register",created:function(){var e=document.createElement("a");e.textContent="login?",e.addEventListener("click",(function(){d("login")}),{once:!0}),s.popupForm.appendChild(e)},completed:function(){return d("login")}},createRoom:{title:"create room",objects:[{name:"name",label:"room name"},{name:"description"},{name:"status",label:"type (public/hidden/private)"},{name:"password (leave blank if public)",type:"password"}],api:t+"/api/rooms/create",created:function(){var e=document.createElement("button");e.textContent="cancel",e.addEventListener("click",(function(){s.popupForm.innerHTML="",s.popup.className="hidden"}),{once:!0}),s.popupForm.appendChild(e)}},joinRoom:{title:"join room",objects:[{name:"password",type:"password"}],api:t+"/api/rooms/join"}},d=function(e,t){s.popup.className="",c[e]||(s.popupForm.innerHTML="form inputs of name "+e+" not available.",console.error("form inputs of name "+e+" not available.")),s.popupForm.innerHTML=c[e].title+(t?"\n"+t:"");for(var o=c[e].objects,r={},a=0;a<o.length;a++){var i="temp-"+o[a].name+"-("+Math.random()+")",m=document.createElement("label");m.htmlFor=i,m.textContent=o[a].label||o[a].name;var p=document.createElement("input");p.id=i,p.placeholder="...",p.type=o[a].type||"text",s.popupForm.append(m,p),r[o[a].name]=p}c[e].created&&c[e].created();var u=document.createElement("button");return u.textContent=c[e].title,s.popupForm.appendChild(u),u.addEventListener("click",(function(){var t={token:sessionStorage.getItem("token")};for(var o in r)t[o]=r[o].value;n(c[e].api,t,(function(t){return t.success?(s.popup.className="hidden",c[e].completed?c[e].completed(t):void 0):d(e,t.response)}))}),{once:!0}),!0},p=function(){sessionStorage.getItem("username")&&(s.usernameDisplay.textContent=sessionStorage.getItem("username")),s.logOut.addEventListener("click",(function(){sessionStorage.getItem("token")&&n(t+"/api/users/logout",{token:sessionStorage.getItem("token")},(function(){s.roomList.innerHTML="",s.chatList.innerHTML="",sessionStorage.clear(),d("login")}))}))};sessionStorage.getItem("token")?n(t+"/api/users/checktoken",{token:sessionStorage.getItem("token")},(function(e){!0!==e.success||"success"!==e.response?d("login","expired"===e.response?"session expired":void 0):(i(),p(),r(),s.popup.className="hidden")})):d("login")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9td29ya2pzLWFwcC8uL3NyYy9hamF4LnRzIiwid2VicGFjazovL2Zyb213b3JranMtYXBwLy4vc3JjL3Jvb21IYW5kbGVyLnRzIiwid2VicGFjazovL2Zyb213b3JranMtYXBwLy4vc3JjL2RvbS50cyIsIndlYnBhY2s6Ly9mcm9td29ya2pzLWFwcC8uL3NyYy9tZXNzYWdlSGFuZGxlci50cyIsIndlYnBhY2s6Ly9mcm9td29ya2pzLWFwcC8uL3NyYy9mb3JtRGF0YS50cyIsIndlYnBhY2s6Ly9mcm9td29ya2pzLWFwcC8uL3NyYy9wb3B1cEhhbmRsZXIudHMiLCJ3ZWJwYWNrOi8vZnJvbXdvcmtqcy1hcHAvLi9zcmMvdXNlckhhbmRsZXIudHMiLCJ3ZWJwYWNrOi8vZnJvbXdvcmtqcy1hcHAvLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOlsiY3VycmVudFJvb21CdXR0b24iLCJob3N0bmFtZSIsImdldCIsInVybCIsImNhbGxiYWNrIiwiZGF0YSIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiaGVhZGVycyIsIkhlYWRlcnMiLCJhcHBlbmQiLCJvcHRpb25zIiwibWV0aG9kIiwicmVkaXJlY3QiLCJmZXRjaCIsInRoZW4iLCJqc29uIiwicmVzcG9uc2UiLCJjYXRjaCIsImVycm9yIiwicG9zdCIsImh0bWxFbGVtZW50cyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJ1c2VNZXNzYWdlSGFuZGxlciIsImNoYXRGaWVsZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInNlc3Npb25TdG9yYWdlIiwiZ2V0SXRlbSIsImtleSIsInRva2VuIiwicm9vbUlkIiwibWVzc2FnZSIsInZhbHVlIiwic3VjY2VzcyIsImNoYXRFbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInRleHRDb250ZW50IiwiY2xhc3NOYW1lIiwiY2hhdExpc3QiLCJhcHBlbmRDaGlsZCIsImRpc3BsYXlNZXNzYWdlIiwicm9vbVRpdGxlIiwibmFtZSIsImlubmVySFRNTCIsIm1lc3NhZ2VzIiwiYXV0aG9yIiwidXNlUm9vbUhhbmRsZXIiLCJjcmVhdGVSb29tIiwiZGlzcGxheUZvcm0iLCJ1cGRhdGVSb29tcyIsInJvb21MaXN0IiwidXNlclJlc3BvbnNlIiwiY29uc29sZSIsIndhcm4iLCJyb29tUmVzcG9uc2UiLCJpIiwiYnV0dG9uIiwicm9vbXMiLCJzZXRJdGVtIiwibGVuZ3RoIiwicmVsYXRpb24iLCJ0eXBlcyIsImZvcm1EYXRhIiwibG9naW4iLCJ0aXRsZSIsIm9iamVjdHMiLCJ0eXBlIiwiYXBpIiwiY3JlYXRlZCIsIm9uY2UiLCJwb3B1cEZvcm0iLCJjb21wbGV0ZWQiLCJ1c2VybmFtZSIsInVzZXJJZCIsInJlbW92ZUl0ZW0iLCJ1c2VVc2VySGFuZGxlciIsInJlZ2lzdGVyIiwibGFiZWwiLCJwb3B1cCIsImpvaW5Sb29tIiwiZm9ybUlucHV0cyIsImlucHV0T2JqZWN0cyIsInRlbXBJZCIsIk1hdGgiLCJyYW5kb20iLCJodG1sRm9yIiwiaW5wdXRFbGVtZW50IiwiaWQiLCJwbGFjZWhvbGRlciIsInN1Ym1pdEJ1dHRvbiIsImZpZWxkIiwidXNlcm5hbWVEaXNwbGF5IiwibG9nT3V0IiwiY2xlYXIiLCJ1bmRlZmluZWQiXSwibWFwcGluZ3MiOiJtQkFTUSxJQ0pKQSxFRElVQyxFQUFXLDJCQUVYQyxFQUFNLFNBQUNDLEVBQWFDLEVBQXVEQyxHQUlyRixJQUFNQyxFQUFPQyxLQUFLQyxVQUFVSCxHQUV0QkksRUFBVSxJQUFJQyxRQUVwQkQsRUFBUUUsT0FBTyxlQUFnQixvQkFFL0JGLEVBQVFFLE9BQU8sWUFBYUwsR0FHNUIsSUFBTU0sRUFBdUIsQ0FDekJDLE9BQVEsTUFDUkosUUFBU0EsRUFDVEssU0FBVSxVQUlkLElBR0lDLE1BQU1aLEVBQUtTLEdBQ05JLE1BQUssU0FBQVYsR0FBUSxPQUFBQSxFQUFLVyxVQUNsQkQsTUFBSyxTQUFBRSxHQUFZLE9BQUFkLEVBQVNjLE1BQzFCQyxPQUFNLFNBQUFDLEdBQVMsT0FBQWhCLEVBQVNnQixHQUFP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QWlDLENBQ2pDMkIsTUFBT0gsZUFBZUMsUUFBUSxVQUVsQyxJQUFLLElBQUkrRCxLQUFTVCxFQUNkL0UsRUFBS3dGLEdBQVNULEVBQWFTLEdBQU8xRCxNQUd0Q2QsRUFBSzRDLEVBQVNwQixHQUFNeUIsSUFBS2pFLEdBQU0sU0FBQ2EsR0FDNUIsT0FBS0EsRUFBU2tCLFNBSWRkLEVBQWEyRCxNQUFNekMsVUFBWSxTQUMzQnlCLEVBQVNwQixHQUFNNkIsVUFDUlQsRUFBU3BCLEdBQU02QixVQUFVeEQsUUFEcEMsR0FKV2lDLEVBQVlOLEVBQU0zQixFQUFTQSxlQU8zQyxDQUFDc0QsTUFBTSxLQUVILEdDdkRFTSxFQUFpQixXQUN0QmpELGVBQWVDLFFBQVEsY0FBYVIsRUFBYXdFLGdCQUFnQnZELFlBQWNWLGVBQWVDLFFBQVEsYUFFMUdSLEVBQWF5RSxPQUFPcEUsaUJBQWlCLFNBQVMsV0FDdENFLGVBQWVDLFFBQVEsVUFDdkJULEVBQUtwQixFQUFXLG9CQUFxQixDQUFDK0IsTUFBT0gsZUFBZUMsUUFBUSxXQUFXLFdBQzNFUixFQUFhK0IsU0FBU1AsVUFBWSxHQUNsQ3hCLEVBQWFtQixTQUFTSyxVQUFZLEdBQ2xDakIsZUFBZW1FLFFBQ2Y3QyxFQUFZLGdCQ0xwQnRCLGVBQWVDLFFBQVEsU0FDdkJULEVBQUtwQixFQUFXLHdCQUF5QixDQUFDK0IsTUFBT0gsZUFBZUMsUUFBUSxXQUFXLFNBQUNaLElBQ3JELElBQXJCQSxFQUFTa0IsU0FBMEMsWUFBdEJsQixFQUFTQSxTQUN4Q2lDLEVBQVksUUFBK0IsWUFBdEJqQyxFQUFTQSxTQUF5Qix1QkFBb0IrRSxJQUUzRWhELElBQ0E2QixJQUNBckQsSUFDQUgsRUFBYTJELE1BQU16QyxVQUFZLGFBSXZDVyxFQUFZLFUiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEhUVFAgcmVxdWVzdCAqL1xyXG5cclxuLyoqXHJcbiAqIEV4ZWN1dGUgSFRUUCBHRVQgcmVxdWVzdCwgd2l0aCBmZXRjaCBhcGkgYXMgSlNPTi5cclxuICogQHBhcmFtIHtzdHJpbmd9IHVybCAtIEZvciBsb2NhbCBsb2NhdGlvbiB1c2UgYC9wYXRoL2xvY2F0aW9uYCwgZm9yIG91dHNpZGUgbG9jYXRpb24gdXNlIGBodHRwKHMpOi8veW91clVSTC9sb2NhdGlvbmBcclxuICogQHBhcmFtIHsocmVzcG9uc2U6IG9iamVjdCkgPT4gdm9pZH0gY2FsbGJhY2sgLSBDYWxsYmFjayBmdW5jdGlvbiBmb3IgaGFuZGxpbmcgdGhlIHJlc3BvbnNlXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSBkYXRhIC0gT3B0aW9uYWwsIHBhcnNlIGEgSmF2YVNjcmlwdCBvYmplY3QgYXMgcmVxdXN0IGJvZHlcclxuICovXHJcblxyXG4gZXhwb3J0IGNvbnN0IGhvc3RuYW1lID0gJ2h0dHA6Ly8xNzIuMTYuMTE1LjE2ODo4MCdcclxuXHJcbiBleHBvcnQgY29uc3QgZ2V0ID0gKHVybDogc3RyaW5nLCBjYWxsYmFjazogKHJlc3BvbnNlOiBvYmplY3QsIGVycm9yPzogYm9vbGVhbikgPT4gdm9pZCwgZGF0YT86IG9iamVjdCk6IHZvaWQgPT4ge1xyXG4gICAgXHJcbiAgICAvLyBzZXR0aW5nIHVwIHJlcXVlc3QgYW5kIGJvZHlcclxuXHJcbiAgICBjb25zdCBib2R5ID0gSlNPTi5zdHJpbmdpZnkoZGF0YSk7XHJcblxyXG4gICAgY29uc3QgaGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7XHJcblxyXG4gICAgaGVhZGVycy5hcHBlbmQoXCJDb250ZW50LVR5cGVcIiwgXCJhcHBsaWNhdGlvbi9qc29uXCIpO1xyXG5cclxuICAgIGhlYWRlcnMuYXBwZW5kKFwiRGF0YS1Cb2R5XCIsIGJvZHkpXHJcblxyXG5cclxuICAgIGNvbnN0IG9wdGlvbnM6IFJlcXVlc3RJbml0ID0ge1xyXG4gICAgICAgIG1ldGhvZDogJ0dFVCcsXHJcbiAgICAgICAgaGVhZGVyczogaGVhZGVycyxcclxuICAgICAgICByZWRpcmVjdDogJ2ZvbGxvdydcclxuICAgIH1cclxuXHJcbiAgICAvLyBtYXhpbXVtIGVycm9yIGhhbmRsaW5nIHRvIG1haW50YWluIHN0YWJpbGl0eVxyXG4gICAgdHJ5IHtcclxuXHJcbiAgICAgICAgLy8gZXhlY3V0ZSByZXF1ZXN0LCBmb2xsb3dzIHJlZGlyZWN0cywgZXhwZWN0cyBqc29uXHJcbiAgICAgICAgZmV0Y2godXJsLCBvcHRpb25zKVxyXG4gICAgICAgICAgICAudGhlbihib2R5ID0+IGJvZHkuanNvbigpKVxyXG4gICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiBjYWxsYmFjayhyZXNwb25zZSkpXHJcbiAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiBjYWxsYmFjayhlcnJvciwgdHJ1ZSkpO1xyXG5cclxuICAgIH0gY2F0Y2goZXJyb3IpIHtcclxuICAgICAgICBjYWxsYmFjayhlcnJvciwgdHJ1ZSk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIEV4ZWN1dGUgSFRUUCBHRVQgcmVxdWVzdCwgd2l0aCBmZXRjaCBhcGkgYXMgSlNPTi5cclxuICogQHBhcmFtIHtzdHJpbmd9IHVybCAtIFVybCByZWxhdGl2ZSB0byByb290LCBmb3Igb3V0c2lkZSB1c2UgYGh0dHAocyk6Ly9gXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSBkYXRhIC0gUGFyc2UgYSBKYXZhU2NyaXB0IG9iamVjdCBhcyByZXF1c3QgYm9keVxyXG4gKiBAcGFyYW0geyhyZXNwb25zZTogb2JqZWN0KSA9PiB2b2lkfSBjYWxsYmFjayAtIENhbGxiYWNrIGZ1bmN0aW9uIGZvciBoYW5kbGluZyB0aGUgcmVzcG9uc2VcclxuICovXHJcblxyXG5leHBvcnQgY29uc3QgcG9zdCA9ICh1cmw6IHN0cmluZywgZGF0YTogb2JqZWN0LCBjYWxsYmFjazogKHJlc3BvbnNlOiBvYmplY3QsIGVycm9yPzogYm9vbGVhbikgPT4gdm9pZCkgPT4ge1xyXG4gICAgXHJcbiAgICAvLyBzZXR0aW5nIHVwIHJlcXVlc3QgYW5kIGJvZHlcclxuXHJcbiAgICBjb25zdCBib2R5ID0gSlNPTi5zdHJpbmdpZnkoZGF0YSk7XHJcblxyXG4gICAgY29uc3QgaGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7XHJcblxyXG4gICAgaGVhZGVycy5hcHBlbmQoXCJDb250ZW50LVR5cGVcIiwgXCJhcHBsaWNhdGlvbi9qc29uXCIpO1xyXG5cclxuXHJcblxyXG4gICAgLy8gbWF4aW11bSBlcnJvciBoYW5kbGluZyB0byBtYWludGFpbiBzdGFiaWxpdHlcclxuICAgIHRyeSB7XHJcblxyXG4gICAgICAgIC8vIGV4ZWN1dGUgcmVxdWVzdCwgZm9sbG93cyByZWRpcmVjdHMsIGV4cGVjdHMganNvblxyXG4gICAgICAgIGZldGNoKHVybCwge21ldGhvZDogJ1BPU1QnLCBoZWFkZXJzOiBoZWFkZXJzLCBib2R5OiBib2R5LCByZWRpcmVjdDogJ2ZvbGxvdyd9KVxyXG4gICAgICAgICAgICAudGhlbihib2R5ID0+IGJvZHkuanNvbigpKVxyXG4gICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiBjYWxsYmFjayhyZXNwb25zZSkpXHJcbiAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiBjYWxsYmFjayhlcnJvciwgdHJ1ZSkpO1xyXG5cclxuICAgIH0gY2F0Y2goZXJyb3IpIHtcclxuICAgICAgICBjYWxsYmFjayhlcnJvciwgdHJ1ZSk7XHJcbiAgICB9XHJcblxyXG59IiwiaW1wb3J0IHsgZ2V0LCBob3N0bmFtZSB9IGZyb20gXCIuL2FqYXhcIlxyXG5pbXBvcnQgeyBodG1sRWxlbWVudHMgfSBmcm9tIFwiLi9kb21cIlxyXG5pbXBvcnQgeyBkaXNwbGF5TWVzc2FnZSB9IGZyb20gXCIuL21lc3NhZ2VIYW5kbGVyXCJcclxuaW1wb3J0IHsgZGlzcGxheUZvcm0gfSBmcm9tIFwiLi9wb3B1cEhhbmRsZXJcIlxyXG5cclxubGV0IGN1cnJlbnRSb29tQnV0dG9uOiBIVE1MQnV0dG9uRWxlbWVudDtcclxuXHJcbmV4cG9ydCBjb25zdCB1c2VSb29tSGFuZGxlciA9ICgpID0+IHtcclxuICAgIGh0bWxFbGVtZW50cy5jcmVhdGVSb29tLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgIGRpc3BsYXlGb3JtKCdjcmVhdGVSb29tJylcclxuICAgIH0pXHJcbiAgICB1cGRhdGVSb29tcygpO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgdXBkYXRlUm9vbXMgPSAoKSA9PiB7XHJcbiAgICBodG1sRWxlbWVudHMucm9vbUxpc3QuaW5uZXJIVE1MID0gJyc7XHJcbiAgICBsZXQgdG9rZW4gPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpXHJcbiAgICBpZiAoIXRva2VuKSByZXR1cm47XHJcblxyXG4gICAgZ2V0KGhvc3RuYW1lICsgJy9hcGkvcm9vbXMvZ2V0dXNlcicsICh1c2VyUmVzcG9uc2U6IGFueSkgPT4ge1xyXG4gICAgICAgIGlmICghdXNlclJlc3BvbnNlLnN1Y2Nlc3MpIHJldHVybiBjb25zb2xlLndhcm4oYGVycm9yIGdldHRpbmcgdXNlcjogJHt1c2VyUmVzcG9uc2UucmVzcG9uc2V9YCk7XHJcblxyXG4gICAgICAgIGdldChob3N0bmFtZSArICcvYXBpL3Jvb21zL2dldGxpc3QnLCAocm9vbVJlc3BvbnNlOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgaWYgKCFyb29tUmVzcG9uc2Uuc3VjY2VzcykgcmV0dXJuIGNvbnNvbGUud2FybihgZXJyb3IgZ2V0dGluZyByb29tbGlzdDogJHtyb29tUmVzcG9uc2UucmVzcG9uc2V9YClcclxuXHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcm9vbVJlc3BvbnNlLnJvb21zLmxlbmd0aDsgaSsrKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgbGV0IGJ1dHRvbiA9IDxIVE1MQnV0dG9uRWxlbWVudD5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKVxyXG4gICAgICAgICAgICAgICAgYnV0dG9uLmNsYXNzTmFtZSA9ICdyb29tJztcclxuICAgICAgICAgICAgICAgIGJ1dHRvbi50ZXh0Q29udGVudCA9IHJvb21SZXNwb25zZS5yb29tc1tpXS5uYW1lO1xyXG4gICAgICAgICAgICAgICAgaHRtbEVsZW1lbnRzLnJvb21MaXN0LmFwcGVuZENoaWxkKGJ1dHRvbilcclxuXHJcbiAgICAgICAgICAgICAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRSb29tQnV0dG9uICE9IGJ1dHRvbikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50Um9vbUJ1dHRvbi5jbGFzc05hbWUgPSAncm9vbSc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJ1dHRvbi5jbGFzc05hbWUgPSAncm9vbSBhY3RpdmUnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50Um9vbUJ1dHRvbiA9IGJ1dHRvbjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgncm9vbUlkJywgcm9vbVJlc3BvbnNlLnJvb21zW2ldLnJvb21JZClcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheU1lc3NhZ2Uocm9vbVJlc3BvbnNlLnJvb21zW2ldKSAgICBcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgICAgIGlmIChpID09PSAwICYmICghc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgncm9vbUlkJykgfHwgc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgncm9vbUlkJykgPT09ICd1bmRlZmluZWQnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGJ1dHRvbi5jbGFzc05hbWUgPSAncm9vbSBhY3RpdmUnO1xyXG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRSb29tQnV0dG9uID0gYnV0dG9uO1xyXG4gICAgICAgICAgICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ3Jvb21JZCcsIHJvb21SZXNwb25zZS5yb29tc1tpXS5yb29tSWQpXHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheU1lc3NhZ2Uocm9vbVJlc3BvbnNlLnJvb21zW2ldKSAgICBcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocm9vbVJlc3BvbnNlLnJvb21zW2ldLnJvb21JZCA9PT0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgncm9vbUlkJykpIHtcclxuICAgICAgICAgICAgICAgICAgICBidXR0b24uY2xhc3NOYW1lID0gJ3Jvb20gYWN0aXZlJztcclxuICAgICAgICAgICAgICAgICAgICBjdXJyZW50Um9vbUJ1dHRvbiA9IGJ1dHRvbjtcclxuICAgICAgICAgICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCdyb29tSWQnLCByb29tUmVzcG9uc2Uucm9vbXNbaV0ucm9vbUlkKVxyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXlNZXNzYWdlKHJvb21SZXNwb25zZS5yb29tc1tpXSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sIHt0b2tlbjogdG9rZW4sIHJvb21zOiB1c2VyUmVzcG9uc2Uucm9vbXN9KVxyXG4gICAgfSwge3Rva2VuOiB0b2tlbiwgcmVsYXRpb246IFsnam9pbmVkJywgJ2NyZWF0ZWQnXSwgdHlwZXM6IFsncHVibGljJywgJ2hpZGRlbicsICdwcml2YXRlJ119KVxyXG59IiwiZXhwb3J0IGNvbnN0IGh0bWxFbGVtZW50cyA9IHtcclxuICAgICdjcmVhdGVSb29tJzogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NyZWF0ZS1yb29tJykhLFxyXG4gICAgJ3Jvb21TZWFyY2gnOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vbS1zZWFyY2gnKSEsXHJcbiAgICAncm9vbUxpc3QnOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vbS1saXN0LWNvbnRhaW5lcicpISxcclxuICAgICd1c2VybmFtZURpc3BsYXknOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndXNlcm5hbWUtZGlzcGxheScpISxcclxuICAgICdsb2dPdXQnOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbG9nLW91dCcpISxcclxuICAgICdyb29tVGl0bGUnOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vbS10aXRsZScpISxcclxuICAgICdjaGF0TGlzdCc6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjaGF0LWxpc3QtY29udGFpbmVyJykhLFxyXG4gICAgJ2NoYXRGaWVsZCc6IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjaGF0LWZpZWxkJykhLFxyXG4gICAgJ3BvcHVwJzogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BvcHVwJykhLFxyXG4gICAgJ3BvcHVwRm9ybSc6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwb3B1cC1mb3JtJykhLFxyXG59IiwiaW1wb3J0IHsgZ2V0LCBob3N0bmFtZSwgcG9zdCB9IGZyb20gXCIuL2FqYXhcIlxyXG5pbXBvcnQgeyBodG1sRWxlbWVudHMgfSBmcm9tIFwiLi9kb21cIlxyXG5cclxuZXhwb3J0IGNvbnN0IHVzZU1lc3NhZ2VIYW5kbGVyID0gKCkgPT4ge1xyXG4gICAgaHRtbEVsZW1lbnRzLmNoYXRGaWVsZC5hZGRFdmVudExpc3RlbmVyKCdrZXlwcmVzcycsIChldmVudDogS2V5Ym9hcmRFdmVudCkgPT4ge1xyXG4gICAgICAgIGlmICghc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgncm9vbUlkJykgfHwgc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgncm9vbUlkJykgPT09ICd1bmRlZmluZWQnKSByZXR1cm47XHJcbiAgICAgICAgaWYgKGV2ZW50LmtleSA9PT0gJ0VudGVyJykge1xyXG4gICAgICAgICAgICBwb3N0KGhvc3RuYW1lICsgJy9hcGkvbWVzc2FnZXMvcG9zdCcsIHtcclxuICAgICAgICAgICAgICAgIHRva2VuOiBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpLFxyXG4gICAgICAgICAgICAgICAgcm9vbUlkOiBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdyb29tSWQnKSxcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGh0bWxFbGVtZW50cy5jaGF0RmllbGQudmFsdWUsXHJcbiAgICAgICAgICAgIH0sIChyZXNwb25zZTogYW55KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3VjY2VzcyAmJiByZXNwb25zZS5yZXNwb25zZSA9PT0gJ3N1Y2Nlc3MnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNoYXRFbGVtZW50ID0gPEhUTUxFbGVtZW50PmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXHJcbiAgICAgICAgICAgICAgICAgICAgY2hhdEVsZW1lbnQudGV4dENvbnRlbnQgPSBodG1sRWxlbWVudHMuY2hhdEZpZWxkLnZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGNoYXRFbGVtZW50LmNsYXNzTmFtZSA9IFwiY2hhdCByaWdodFwiICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIGh0bWxFbGVtZW50cy5jaGF0TGlzdC5hcHBlbmRDaGlsZChjaGF0RWxlbWVudCk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGh0bWxFbGVtZW50cy5jaGF0RmllbGQudmFsdWUgPSAnJztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICB9KVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZGlzcGxheU1lc3NhZ2UgPSAoZGF0YTogYW55KSA9PiB7XHJcbiAgICBodG1sRWxlbWVudHMucm9vbVRpdGxlLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xyXG4gICAgaHRtbEVsZW1lbnRzLmNoYXRMaXN0LmlubmVySFRNTCA9ICcnXHJcbiAgICBnZXQoaG9zdG5hbWUgKyAnL2FwaS9tZXNzYWdlcy9nZXRsaXN0JywgKHJlc3BvbnNlOiBhbnkpID0+IHtcclxuICAgICAgICBmb3IgKGxldCBtZXNzYWdlIGluIHJlc3BvbnNlLm1lc3NhZ2VzKSB7XHJcbiAgICAgICAgICAgIGxldCBjaGF0RWxlbWVudCA9IDxIVE1MRWxlbWVudD5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxyXG4gICAgICAgICAgICBpZiAocmVzcG9uc2UubWVzc2FnZXNbbWVzc2FnZV0uYXV0aG9yID09PSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd1c2VySWQnKSkge1xyXG4gICAgICAgICAgICAgICAgY2hhdEVsZW1lbnQudGV4dENvbnRlbnQgPSByZXNwb25zZS5tZXNzYWdlc1ttZXNzYWdlXS5tZXNzYWdlO1xyXG4gICAgICAgICAgICAgICAgY2hhdEVsZW1lbnQuY2xhc3NOYW1lID0gXCJjaGF0IHJpZ2h0XCJcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGNoYXRFbGVtZW50LnRleHRDb250ZW50ID0gJ1snICsgcmVzcG9uc2UubWVzc2FnZXNbbWVzc2FnZV0uYXV0aG9yICsgJ106ICcgKyByZXNwb25zZS5tZXNzYWdlc1ttZXNzYWdlXS5tZXNzYWdlO1xyXG4gICAgICAgICAgICAgICAgY2hhdEVsZW1lbnQuY2xhc3NOYW1lID0gXCJjaGF0IGxlZnRcIlxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGh0bWxFbGVtZW50cy5jaGF0TGlzdC5hcHBlbmRDaGlsZChjaGF0RWxlbWVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSwge21lc3NhZ2VzOiBkYXRhLm1lc3NhZ2VzfSlcclxufSIsImltcG9ydCB7IGh0bWxFbGVtZW50cyB9IGZyb20gXCIuL2RvbVwiO1xyXG5pbXBvcnQgeyBkaXNwbGF5Rm9ybSB9IGZyb20gXCIuL3BvcHVwSGFuZGxlclwiO1xyXG5pbXBvcnQgeyBob3N0bmFtZSB9IGZyb20gJy4vYWpheCc7XHJcbmltcG9ydCB7IHVzZVJvb21IYW5kbGVyIH0gZnJvbSBcIi4vcm9vbUhhbmRsZXJcIjtcclxuaW1wb3J0IHsgdXNlVXNlckhhbmRsZXIgfSBmcm9tIFwiLi91c2VySGFuZGxlclwiO1xyXG5pbXBvcnQgeyB1c2VNZXNzYWdlSGFuZGxlciB9IGZyb20gXCIuL21lc3NhZ2VIYW5kbGVyXCI7XHJcblxyXG5leHBvcnQgY29uc3QgZm9ybURhdGE6IGFueSA9IHtcclxuICAgIGxvZ2luOiB7XHJcbiAgICAgICAgdGl0bGU6ICdsb2dpbicsXHJcbiAgICAgICAgb2JqZWN0czogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiAndXNlcm5hbWUnLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiAncGFzc3dvcmQnLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogJ3Bhc3N3b3JkJyxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgYXBpOiBob3N0bmFtZSArICcvYXBpL3VzZXJzL2xvZ2luJyxcclxuICAgICAgICBjcmVhdGVkOiAoKSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBidXR0b24gPSA8SFRNTEVsZW1lbnQ+ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xyXG4gICAgICAgICAgICBidXR0b24udGV4dENvbnRlbnQgPSAnc2lnbiB1cD8nXHJcbiAgICAgICAgICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXlGb3JtKCdyZWdpc3RlcicpO1xyXG4gICAgICAgICAgICB9LCB7b25jZTogdHJ1ZX0pXHJcbiAgICAgICAgICAgIGh0bWxFbGVtZW50cy5wb3B1cEZvcm0uYXBwZW5kQ2hpbGQoYnV0dG9uKTsgICAgXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjb21wbGV0ZWQ6IChyZXNwb25zZTogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ3VzZXJuYW1lJywgcmVzcG9uc2UudXNlcm5hbWUpO1xyXG4gICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCd1c2VySWQnLCByZXNwb25zZS51c2VySWQpO1xyXG4gICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCd0b2tlbicsIHJlc3BvbnNlLnRva2VuKTtcclxuICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbSgncm9vbUlkJylcclxuXHJcbiAgICAgICAgICAgIHVzZVJvb21IYW5kbGVyKCk7XHJcbiAgICAgICAgICAgIHVzZVVzZXJIYW5kbGVyKCk7XHJcbiAgICAgICAgICAgIHVzZU1lc3NhZ2VIYW5kbGVyKCk7XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICByZWdpc3Rlcjoge1xyXG4gICAgICAgIHRpdGxlOiAncmVnaXN0ZXInLFxyXG4gICAgICAgIG9iamVjdHM6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgbmFtZTogJ3VzZXJuYW1lJyxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgbmFtZTogJ2VtYWlsJyxcclxuICAgICAgICAgICAgICAgIHR5cGU6ICdlbWFpbCdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgbmFtZTogJ3Bhc3N3b3JkJyxcclxuICAgICAgICAgICAgICAgIHR5cGU6ICdwYXNzd29yZCcsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdLFxyXG4gICAgICAgIGFwaTogaG9zdG5hbWUgKyAnL2FwaS91c2Vycy9yZWdpc3RlcicsXHJcbiAgICAgICAgY3JlYXRlZDogKCkgPT4ge1xyXG4gICAgICAgICAgICBsZXQgYnV0dG9uID0gPEhUTUxFbGVtZW50PmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcclxuICAgICAgICAgICAgYnV0dG9uLnRleHRDb250ZW50ID0gJ2xvZ2luPydcclxuICAgICAgICAgICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheUZvcm0oJ2xvZ2luJyk7XHJcbiAgICAgICAgICAgIH0sIHtvbmNlOiB0cnVlfSlcclxuICAgICAgICAgICAgaHRtbEVsZW1lbnRzLnBvcHVwRm9ybS5hcHBlbmRDaGlsZChidXR0b24pOyAgICAgIFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY29tcGxldGVkOiAoKSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiBkaXNwbGF5Rm9ybSgnbG9naW4nKVxyXG4gICAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgY3JlYXRlUm9vbToge1xyXG4gICAgICAgIHRpdGxlOiAnY3JlYXRlIHJvb20nLFxyXG4gICAgICAgIG9iamVjdHM6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgbmFtZTogJ25hbWUnLFxyXG4gICAgICAgICAgICAgICAgbGFiZWw6ICdyb29tIG5hbWUnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIG5hbWU6ICdkZXNjcmlwdGlvbicsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIG5hbWU6ICdzdGF0dXMnLFxyXG4gICAgICAgICAgICAgICAgbGFiZWw6ICd0eXBlIChwdWJsaWMvaGlkZGVuL3ByaXZhdGUpJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiAncGFzc3dvcmQgKGxlYXZlIGJsYW5rIGlmIHB1YmxpYyknLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogJ3Bhc3N3b3JkJyxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgYXBpOiBob3N0bmFtZSArICcvYXBpL3Jvb21zL2NyZWF0ZScsXHJcbiAgICAgICAgY3JlYXRlZDogKCkgPT4ge1xyXG4gICAgICAgICAgICBsZXQgYnV0dG9uID0gPEhUTUxCdXR0b25FbGVtZW50PmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xyXG4gICAgICAgICAgICBidXR0b24udGV4dENvbnRlbnQgPSAnY2FuY2VsJ1xyXG4gICAgICAgICAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBodG1sRWxlbWVudHMucG9wdXBGb3JtLmlubmVySFRNTCA9ICcnO1xyXG4gICAgICAgICAgICAgICAgaHRtbEVsZW1lbnRzLnBvcHVwLmNsYXNzTmFtZSA9ICdoaWRkZW4nO1xyXG4gICAgICAgICAgICB9LCB7b25jZTogdHJ1ZX0pXHJcbiAgICAgICAgICAgIGh0bWxFbGVtZW50cy5wb3B1cEZvcm0uYXBwZW5kQ2hpbGQoYnV0dG9uKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgam9pblJvb206IHtcclxuICAgICAgICB0aXRsZTogJ2pvaW4gcm9vbScsXHJcbiAgICAgICAgb2JqZWN0czogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiAncGFzc3dvcmQnLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogJ3Bhc3N3b3JkJyxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgYXBpOiBob3N0bmFtZSArICcvYXBpL3Jvb21zL2pvaW4nLFxyXG4gICAgfVxyXG59IiwiaW1wb3J0IHsgcG9zdCB9IGZyb20gJy4vYWpheCdcclxuaW1wb3J0IHsgaHRtbEVsZW1lbnRzIH0gZnJvbSAnLi9kb20nXHJcbmltcG9ydCB7IGZvcm1EYXRhIH0gZnJvbSAnLi9mb3JtRGF0YSdcclxuXHJcbmV4cG9ydCBjb25zdCBkaXNwbGF5Rm9ybSA9IChuYW1lOiBzdHJpbmcsIG1lc3NhZ2U/OiBzdHJpbmcpID0+IHtcclxuICAgIGh0bWxFbGVtZW50cy5wb3B1cC5jbGFzc05hbWUgPSAnJztcclxuICAgIGlmICghZm9ybURhdGFbbmFtZV0pIHtcclxuICAgICAgICBodG1sRWxlbWVudHMucG9wdXBGb3JtLmlubmVySFRNTCA9IGBmb3JtIGlucHV0cyBvZiBuYW1lICR7bmFtZX0gbm90IGF2YWlsYWJsZS5gO1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYGZvcm0gaW5wdXRzIG9mIG5hbWUgJHtuYW1lfSBub3QgYXZhaWxhYmxlLmApO1xyXG4gICAgfVxyXG4gICAgaHRtbEVsZW1lbnRzLnBvcHVwRm9ybS5pbm5lckhUTUwgPSBmb3JtRGF0YVtuYW1lXS50aXRsZSArIChtZXNzYWdlID8gJ1xcbicgKyBtZXNzYWdlIDogJycpO1xyXG5cclxuICAgIGxldCBmb3JtSW5wdXRzID0gZm9ybURhdGFbbmFtZV0ub2JqZWN0cztcclxuICAgIGxldCBpbnB1dE9iamVjdHM6IHsgW2tleTogc3RyaW5nXSA6IEhUTUxJbnB1dEVsZW1lbnR9ID0ge31cclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZvcm1JbnB1dHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBsZXQgdGVtcElkID0gYHRlbXAtJHtmb3JtSW5wdXRzW2ldLm5hbWV9LSgke01hdGgucmFuZG9tKCl9KWBcclxuXHJcbiAgICAgICAgbGV0IGxhYmVsID0gPEhUTUxMYWJlbEVsZW1lbnQ+ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcclxuICAgICAgICBsYWJlbC5odG1sRm9yID0gdGVtcElkO1xyXG4gICAgICAgIGxhYmVsLnRleHRDb250ZW50ID0gZm9ybUlucHV0c1tpXS5sYWJlbCB8fCBmb3JtSW5wdXRzW2ldLm5hbWU7XHJcblxyXG4gICAgICAgIGxldCBpbnB1dEVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xyXG4gICAgICAgIGlucHV0RWxlbWVudC5pZCA9IHRlbXBJZDtcclxuICAgICAgICBpbnB1dEVsZW1lbnQucGxhY2Vob2xkZXIgPSAnLi4uJztcclxuICAgICAgICBpbnB1dEVsZW1lbnQudHlwZSA9IGZvcm1JbnB1dHNbaV0udHlwZSB8fCAndGV4dCcsXHJcblxyXG4gICAgICAgIGh0bWxFbGVtZW50cy5wb3B1cEZvcm0uYXBwZW5kKGxhYmVsLCBpbnB1dEVsZW1lbnQpO1xyXG4gICAgICAgIGlucHV0T2JqZWN0c1tmb3JtSW5wdXRzW2ldLm5hbWVdID0gaW5wdXRFbGVtZW50O1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChmb3JtRGF0YVtuYW1lXS5jcmVhdGVkKVxyXG4gICAgICAgIGZvcm1EYXRhW25hbWVdLmNyZWF0ZWQoKTtcclxuXHJcbiAgICAvLyBzdWJtaXQgYnV0dG9uXHJcbiAgICBcclxuICAgIGxldCBzdWJtaXRCdXR0b24gPSA8SFRNTEJ1dHRvbkVsZW1lbnQ+ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XHJcbiAgICBzdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBmb3JtRGF0YVtuYW1lXS50aXRsZTtcclxuICAgIGh0bWxFbGVtZW50cy5wb3B1cEZvcm0uYXBwZW5kQ2hpbGQoc3VibWl0QnV0dG9uKVxyXG5cclxuICAgIHN1Ym1pdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICBsZXQgZGF0YTogeyBbZmllbGQ6IHN0cmluZ106IGFueSB9ID0ge1xyXG4gICAgICAgICAgICB0b2tlbjogc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKSxcclxuICAgICAgICB9O1xyXG4gICAgICAgIGZvciAobGV0IGZpZWxkIGluIGlucHV0T2JqZWN0cykge1xyXG4gICAgICAgICAgICBkYXRhW2ZpZWxkXSA9IGlucHV0T2JqZWN0c1tmaWVsZF0udmFsdWVcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHBvc3QoZm9ybURhdGFbbmFtZV0uYXBpLCBkYXRhLCAocmVzcG9uc2U6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIXJlc3BvbnNlLnN1Y2Nlc3MpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBkaXNwbGF5Rm9ybShuYW1lLCByZXNwb25zZS5yZXNwb25zZSlcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaHRtbEVsZW1lbnRzLnBvcHVwLmNsYXNzTmFtZSA9IFwiaGlkZGVuXCI7XHJcbiAgICAgICAgICAgIGlmIChmb3JtRGF0YVtuYW1lXS5jb21wbGV0ZWQpXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZm9ybURhdGFbbmFtZV0uY29tcGxldGVkKHJlc3BvbnNlKTtcclxuICAgICAgICB9KVxyXG4gICAgfSwge29uY2U6IHRydWV9KVxyXG5cclxuICAgIHJldHVybiB0cnVlO1xyXG59IiwiaW1wb3J0IHsgaG9zdG5hbWUsIHBvc3QgfSBmcm9tIFwiLi9hamF4XCJcclxuaW1wb3J0IHsgaHRtbEVsZW1lbnRzIH0gZnJvbSBcIi4vZG9tXCJcclxuaW1wb3J0IHsgZGlzcGxheUZvcm0gfSBmcm9tIFwiLi9wb3B1cEhhbmRsZXJcIlxyXG5cclxuZXhwb3J0IGNvbnN0IHVzZVVzZXJIYW5kbGVyID0gKCkgPT4ge1xyXG4gICAgaWYgKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3VzZXJuYW1lJykpIGh0bWxFbGVtZW50cy51c2VybmFtZURpc3BsYXkudGV4dENvbnRlbnQgPSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd1c2VybmFtZScpO1xyXG5cclxuICAgIGh0bWxFbGVtZW50cy5sb2dPdXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgaWYgKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJykpIHtcclxuICAgICAgICAgICAgcG9zdChob3N0bmFtZSArICcvYXBpL3VzZXJzL2xvZ291dCcsIHt0b2tlbjogc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKX0sICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGh0bWxFbGVtZW50cy5yb29tTGlzdC5pbm5lckhUTUwgPSAnJztcclxuICAgICAgICAgICAgICAgIGh0bWxFbGVtZW50cy5jaGF0TGlzdC5pbm5lckhUTUwgPSAnJztcclxuICAgICAgICAgICAgICAgIHNlc3Npb25TdG9yYWdlLmNsZWFyKClcclxuICAgICAgICAgICAgICAgIGRpc3BsYXlGb3JtKCdsb2dpbicpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIH0pXHJcbn0iLCJpbXBvcnQgeyBob3N0bmFtZSwgcG9zdCB9IGZyb20gXCIuL2FqYXhcIjtcclxuaW1wb3J0IHsgaHRtbEVsZW1lbnRzIH0gZnJvbSBcIi4vZG9tXCI7XHJcbmltcG9ydCB7IHVzZVVzZXJIYW5kbGVyIH0gZnJvbSBcIi4vdXNlckhhbmRsZXJcIjtcclxuaW1wb3J0IHsgZGlzcGxheUZvcm0gfSBmcm9tIFwiLi9wb3B1cEhhbmRsZXJcIjtcclxuaW1wb3J0IHsgdXNlUm9vbUhhbmRsZXIgfSBmcm9tIFwiLi9yb29tSGFuZGxlclwiO1xyXG5pbXBvcnQgeyB1c2VNZXNzYWdlSGFuZGxlciB9IGZyb20gXCIuL21lc3NhZ2VIYW5kbGVyXCI7XHJcblxyXG5jb25zdCBzdGFydCA9ICgpID0+IHtcclxuICAgIGlmIChzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpKSB7XHJcbiAgICAgICAgcG9zdChob3N0bmFtZSArICcvYXBpL3VzZXJzL2NoZWNrdG9rZW4nLCB7dG9rZW46IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJyl9LCAocmVzcG9uc2U6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIShyZXNwb25zZS5zdWNjZXNzID09PSB0cnVlICYmIHJlc3BvbnNlLnJlc3BvbnNlID09PSAnc3VjY2VzcycpKSB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5Rm9ybSgnbG9naW4nLCByZXNwb25zZS5yZXNwb25zZSA9PT0gJ2V4cGlyZWQnID8gJ3Nlc3Npb24gZXhwaXJlZCcgOiB1bmRlZmluZWQpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdXNlUm9vbUhhbmRsZXIoKTtcclxuICAgICAgICAgICAgICAgIHVzZVVzZXJIYW5kbGVyKCk7XHJcbiAgICAgICAgICAgICAgICB1c2VNZXNzYWdlSGFuZGxlcigpO1xyXG4gICAgICAgICAgICAgICAgaHRtbEVsZW1lbnRzLnBvcHVwLmNsYXNzTmFtZSA9ICdoaWRkZW4nO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZGlzcGxheUZvcm0oJ2xvZ2luJylcclxuICAgIH1cclxufVxyXG5cclxuc3RhcnQoKTsiXSwic291cmNlUm9vdCI6IiJ9