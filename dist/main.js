(()=>{"use strict";var e,t="http://172.16.115.168:80",o=function(e,t,o){var n=JSON.stringify(o),s=new Headers;s.append("Content-Type","application/json"),s.append("Data-Body",n);var r={method:"GET",headers:s,redirect:"follow"};try{fetch(e,r).then((function(e){return e.json()})).then((function(e){return t(e)})).catch((function(e){return t(e,!0)}))}catch(e){t(e,!0)}},n=function(e,t,o){var n=JSON.stringify(t),s=new Headers;s.append("Content-Type","application/json");try{fetch(e,{method:"POST",headers:s,body:n,redirect:"follow"}).then((function(e){return e.json()})).then((function(e){return o(e)})).catch((function(e){return o(e,!0)}))}catch(e){o(e,!0)}},s={createRoom:document.getElementById("create-room"),roomSearch:document.getElementById("room-search"),roomList:document.getElementById("room-list-container"),usernameDisplay:document.getElementById("username-display"),logOut:document.getElementById("log-out"),roomTitle:document.getElementById("room-title"),chatList:document.getElementById("chat-list-container"),chatField:document.getElementById("chat-field"),popup:document.getElementById("popup"),popupForm:document.getElementById("popup-form")},r=function(){s.chatField.addEventListener("keypress",(function(e){sessionStorage.getItem("roomId")&&"undefined"!==sessionStorage.getItem("roomId")&&"Enter"===e.key&&(console.log(sessionStorage.getItem("roomId")),n(t+"/api/messages/post",{token:sessionStorage.getItem("token"),roomId:sessionStorage.getItem("roomId"),message:s.chatField.value},(function(e){if(e.success&&"success"===e.response){var t=document.createElement("div");t.textContent=s.chatField.value,t.className="chat right",s.chatList.appendChild(t)}})))}))},a=function(e){s.roomTitle.textContent=e.name,s.chatList.innerHTML="",o(t+"/api/messages/getlist",(function(e){for(var t in e.messages){var o=document.createElement("div");e.messages[t].author===sessionStorage.getItem("userId")?(o.textContent=e.messages[t].message,o.className="chat right"):(o.textContent="["+e.messages[t].author+"]: "+e.messages[t].message,o.className="chat left"),s.chatList.appendChild(o)}}),{messages:e.messages})},i=function(){s.createRoom.addEventListener("click",(function(){d("createRoom")})),m()},m=function(){s.roomList.innerHTML="";var n=sessionStorage.getItem("token");n&&o(t+"/api/rooms/getuser",(function(r){if(!r.success)return console.warn("error getting user: "+r.response);o(t+"/api/rooms/getlist",(function(t){if(!t.success)return console.warn("error getting roomlist: "+t.response);for(var o=function(o){var n=document.createElement("button");n.className="room",n.textContent=t.rooms[o].name,s.roomList.appendChild(n),n.addEventListener("click",(function(){e!=n&&(e.className="room",n.className="room active",e=n,sessionStorage.setItem("roomId",t.rooms[o].roomId),a(t.rooms[o]))})),0!==o||sessionStorage.getItem("roomId")&&"undefined"!==sessionStorage.getItem("roomId")?t.rooms[o].roomId===sessionStorage.getItem("roomId")&&(n.className="room active",e=n,sessionStorage.setItem("roomId",t.rooms[o].roomId),a(t.rooms[o])):(n.className="room active",e=n,sessionStorage.setItem("roomId",t.rooms[o].roomId),a(t.rooms[o]))},n=0;n<t.rooms.length;n++)o(n)}),{token:n,rooms:r.rooms})}),{token:n,relation:["joined","created"],types:["public","hidden","private"]})},c={login:{title:"login",objects:[{name:"username"},{name:"password",type:"password"}],api:t+"/api/users/login",created:function(){var e=document.createElement("a");e.textContent="sign up?",e.addEventListener("click",(function(){d("register")}),{once:!0}),s.popupForm.appendChild(e)},completed:function(e){return sessionStorage.setItem("username",e.username),sessionStorage.setItem("userId",e.userId),sessionStorage.setItem("token",e.token),sessionStorage.removeItem("roomId"),i(),p(),r(),!0}},register:{title:"register",objects:[{name:"username"},{name:"email",type:"email"},{name:"password",type:"password"}],api:t+"/api/users/register",created:function(){var e=document.createElement("a");e.textContent="login?",e.addEventListener("click",(function(){d("login")}),{once:!0}),s.popupForm.appendChild(e)},completed:function(){return d("login")}},createRoom:{title:"create room",objects:[{name:"name",label:"room name"},{name:"description"},{name:"status",label:"type (public/hidden/private)"},{name:"password (leave blank if public)",type:"password"}],api:t+"/api/rooms/create",created:function(){var e=document.createElement("button");e.textContent="cancel",e.addEventListener("click",(function(){s.popupForm.innerHTML="",s.popup.className="hidden"}),{once:!0}),s.popupForm.appendChild(e)}},joinRoom:{title:"join room",objects:[{name:"password",type:"password"}],api:t+"/api/rooms/join"}},d=function(e,t){s.popup.className="",c[e]||(s.popupForm.innerHTML="form inputs of name "+e+" not available.",console.error("form inputs of name "+e+" not available.")),s.popupForm.innerHTML=c[e].title+(t?"\n"+t:"");for(var o=c[e].objects,r={},a=0;a<o.length;a++){var i="temp-"+o[a].name+"-("+Math.random()+")",m=document.createElement("label");m.htmlFor=i,m.textContent=o[a].label||o[a].name;var p=document.createElement("input");p.id=i,p.placeholder="...",p.type=o[a].type||"text",s.popupForm.append(m,p),r[o[a].name]=p}c[e].created&&c[e].created();var u=document.createElement("button");return u.textContent=c[e].title,s.popupForm.appendChild(u),u.addEventListener("click",(function(){var t={token:sessionStorage.getItem("token")};for(var o in r)t[o]=r[o].value;n(c[e].api,t,(function(t){return t.success?(s.popup.className="hidden",c[e].completed?c[e].completed(t):void 0):d(e,t.response)}))}),{once:!0}),!0},p=function(){sessionStorage.getItem("username")&&(s.usernameDisplay.textContent=sessionStorage.getItem("username")),s.logOut.addEventListener("click",(function(){sessionStorage.getItem("token")&&n(t+"/api/users/logout",{token:sessionStorage.getItem("token")},(function(){s.roomList.innerHTML="",s.chatList.innerHTML="",sessionStorage.removeItem("token"),d("login")}))}))};sessionStorage.getItem("token")?n(t+"/api/users/checktoken",{token:sessionStorage.getItem("token")},(function(e){!0!==e.success||"success"!==e.response?d("login","expired"===e.response?"session expired":void 0):(i(),p(),r(),s.popup.className="hidden")})):d("login")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9td29ya2pzLWFwcC8uL3NyYy9hamF4LnRzIiwid2VicGFjazovL2Zyb213b3JranMtYXBwLy4vc3JjL3Jvb21IYW5kbGVyLnRzIiwid2VicGFjazovL2Zyb213b3JranMtYXBwLy4vc3JjL2RvbS50cyIsIndlYnBhY2s6Ly9mcm9td29ya2pzLWFwcC8uL3NyYy9tZXNzYWdlSGFuZGxlci50cyIsIndlYnBhY2s6Ly9mcm9td29ya2pzLWFwcC8uL3NyYy9mb3JtRGF0YS50cyIsIndlYnBhY2s6Ly9mcm9td29ya2pzLWFwcC8uL3NyYy9wb3B1cEhhbmRsZXIudHMiLCJ3ZWJwYWNrOi8vZnJvbXdvcmtqcy1hcHAvLi9zcmMvdXNlckhhbmRsZXIudHMiLCJ3ZWJwYWNrOi8vZnJvbXdvcmtqcy1hcHAvLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOlsiY3VycmVudFJvb21CdXR0b24iLCJob3N0bmFtZSIsImdldCIsInVybCIsImNhbGxiYWNrIiwiZGF0YSIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiaGVhZGVycyIsIkhlYWRlcnMiLCJhcHBlbmQiLCJvcHRpb25zIiwibWV0aG9kIiwicmVkaXJlY3QiLCJmZXRjaCIsInRoZW4iLCJqc29uIiwicmVzcG9uc2UiLCJjYXRjaCIsImVycm9yIiwicG9zdCIsImh0bWxFbGVtZW50cyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJ1c2VNZXNzYWdlSGFuZGxlciIsImNoYXRGaWVsZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsInNlc3Npb25TdG9yYWdlIiwiZ2V0SXRlbSIsImtleSIsImNvbnNvbGUiLCJsb2ciLCJ0b2tlbiIsInJvb21JZCIsIm1lc3NhZ2UiLCJ2YWx1ZSIsInN1Y2Nlc3MiLCJjaGF0RWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJ0ZXh0Q29udGVudCIsImNsYXNzTmFtZSIsImNoYXRMaXN0IiwiYXBwZW5kQ2hpbGQiLCJkaXNwbGF5TWVzc2FnZSIsInJvb21UaXRsZSIsIm5hbWUiLCJpbm5lckhUTUwiLCJtZXNzYWdlcyIsImF1dGhvciIsInVzZVJvb21IYW5kbGVyIiwiY3JlYXRlUm9vbSIsImRpc3BsYXlGb3JtIiwidXBkYXRlUm9vbXMiLCJyb29tTGlzdCIsInVzZXJSZXNwb25zZSIsIndhcm4iLCJyb29tUmVzcG9uc2UiLCJpIiwiYnV0dG9uIiwicm9vbXMiLCJzZXRJdGVtIiwibGVuZ3RoIiwicmVsYXRpb24iLCJ0eXBlcyIsImZvcm1EYXRhIiwibG9naW4iLCJ0aXRsZSIsIm9iamVjdHMiLCJ0eXBlIiwiYXBpIiwiY3JlYXRlZCIsIm9uY2UiLCJwb3B1cEZvcm0iLCJjb21wbGV0ZWQiLCJ1c2VybmFtZSIsInVzZXJJZCIsInJlbW92ZUl0ZW0iLCJ1c2VVc2VySGFuZGxlciIsInJlZ2lzdGVyIiwibGFiZWwiLCJwb3B1cCIsImpvaW5Sb29tIiwiZm9ybUlucHV0cyIsImlucHV0T2JqZWN0cyIsInRlbXBJZCIsIk1hdGgiLCJyYW5kb20iLCJodG1sRm9yIiwiaW5wdXRFbGVtZW50IiwiaWQiLCJwbGFjZWhvbGRlciIsInN1Ym1pdEJ1dHRvbiIsImZpZWxkIiwidXNlcm5hbWVEaXNwbGF5IiwibG9nT3V0IiwidW5kZWZpbmVkIl0sIm1hcHBpbmdzIjoibUJBU1EsSUNKSkEsRURJVUMsRUFBVywyQkFFWEMsRUFBTSxTQUFDQyxFQUFhQyxFQUF1REMsR0FJckYsSUFBTUMsRUFBT0MsS0FBS0MsVUFBVUgsR0FFdEJJLEVBQVUsSUFBSUMsUUFFcEJELEVBQVFFLE9BQU8sZUFBZ0Isb0JBRS9CRixFQUFRRSxPQUFPLFlBQWFMLEdBRzVCLElBQU1NLEVBQXVCLENBQ3pCQyxPQUFRLE1BQ1JKLFFBQVNBLEVBQ1RLLFNBQVUsVUFJZCxJQUdJQyxNQUFNWixFQUFLUyxHQUNOSSxNQUFLLFNBQUFWLEdBQVEsT0FBQUEsRUFBS1csVUFDbEJELE1BQUssU0FBQUUsR0FBWSxPQUFBZCxFQUFTYyxNQUMxQkMsT0FBTSxTQUFBQyxHQUFTLE9BQUFoQixFQUFTZ0IsR0FBTyxN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V0FDbkMsSUFBSXRCLEVBQWlDLENBQ2pDNkIsTUFBT0wsZUFBZUMsUUFBUSxVQUVsQyxJQUFLLElBQUlnRSxLQUFTVCxFQUNkaEYsRUFBS3lGLEdBQVNULEVBQWFTLEdBQU96RCxNQUd0Q2hCLEVBQUs2QyxFQUFTbkIsR0FBTXdCLElBQUtsRSxHQUFNLFNBQUNhLEdBQzVCLE9BQUtBLEVBQVNvQixTQUlkaEIsRUFBYTRELE1BQU14QyxVQUFZLFNBQzNCd0IsRUFBU25CLEdBQU00QixVQUNSVCxFQUFTbkIsR0FBTTRCLFVBQVV6RCxRQURwQyxHQUpXbUMsRUFBWU4sRUFBTTdCLEVBQVNBLGVBTzNDLENBQUN1RCxNQUFNLEtBRUgsR0N2REVNLEVBQWlCLFdBQ3RCbEQsZUFBZUMsUUFBUSxjQUFhUixFQUFheUUsZ0JBQWdCdEQsWUFBY1osZUFBZUMsUUFBUSxhQUUxR1IsRUFBYTBFLE9BQU9yRSxpQkFBaUIsU0FBUyxXQUN0Q0UsZUFBZUMsUUFBUSxVQUN2QlQsRUFBS3BCLEVBQVcsb0JBQXFCLENBQUNpQyxNQUFPTCxlQUFlQyxRQUFRLFdBQVcsV0FDM0VSLEVBQWFpQyxTQUFTUCxVQUFZLEdBQ2xDMUIsRUFBYXFCLFNBQVNLLFVBQVksR0FDbENuQixlQUFlaUQsV0FBVyxTQUMxQnpCLEVBQVksZ0JDTHBCeEIsZUFBZUMsUUFBUSxTQUN2QlQsRUFBS3BCLEVBQVcsd0JBQXlCLENBQUNpQyxNQUFPTCxlQUFlQyxRQUFRLFdBQVcsU0FBQ1osSUFDckQsSUFBckJBLEVBQVNvQixTQUEwQyxZQUF0QnBCLEVBQVNBLFNBQ3hDbUMsRUFBWSxRQUErQixZQUF0Qm5DLEVBQVNBLFNBQXlCLHVCQUFvQitFLElBRTNFOUMsSUFDQTRCLElBQ0F0RCxJQUNBSCxFQUFhNEQsTUFBTXhDLFVBQVksYUFJdkNXLEVBQVksVSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogSFRUUCByZXF1ZXN0ICovXHJcblxyXG4vKipcclxuICogRXhlY3V0ZSBIVFRQIEdFVCByZXF1ZXN0LCB3aXRoIGZldGNoIGFwaSBhcyBKU09OLlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIC0gRm9yIGxvY2FsIGxvY2F0aW9uIHVzZSBgL3BhdGgvbG9jYXRpb25gLCBmb3Igb3V0c2lkZSBsb2NhdGlvbiB1c2UgYGh0dHAocyk6Ly95b3VyVVJML2xvY2F0aW9uYFxyXG4gKiBAcGFyYW0geyhyZXNwb25zZTogb2JqZWN0KSA9PiB2b2lkfSBjYWxsYmFjayAtIENhbGxiYWNrIGZ1bmN0aW9uIGZvciBoYW5kbGluZyB0aGUgcmVzcG9uc2VcclxuICogQHBhcmFtIHtvYmplY3R9IGRhdGEgLSBPcHRpb25hbCwgcGFyc2UgYSBKYXZhU2NyaXB0IG9iamVjdCBhcyByZXF1c3QgYm9keVxyXG4gKi9cclxuXHJcbiBleHBvcnQgY29uc3QgaG9zdG5hbWUgPSAnaHR0cDovLzE3Mi4xNi4xMTUuMTY4OjgwJ1xyXG5cclxuIGV4cG9ydCBjb25zdCBnZXQgPSAodXJsOiBzdHJpbmcsIGNhbGxiYWNrOiAocmVzcG9uc2U6IG9iamVjdCwgZXJyb3I/OiBib29sZWFuKSA9PiB2b2lkLCBkYXRhPzogb2JqZWN0KTogdm9pZCA9PiB7XHJcbiAgICBcclxuICAgIC8vIHNldHRpbmcgdXAgcmVxdWVzdCBhbmQgYm9keVxyXG5cclxuICAgIGNvbnN0IGJvZHkgPSBKU09OLnN0cmluZ2lmeShkYXRhKTtcclxuXHJcbiAgICBjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnMoKTtcclxuXHJcbiAgICBoZWFkZXJzLmFwcGVuZChcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL2pzb25cIik7XHJcblxyXG4gICAgaGVhZGVycy5hcHBlbmQoXCJEYXRhLUJvZHlcIiwgYm9keSlcclxuXHJcblxyXG4gICAgY29uc3Qgb3B0aW9uczogUmVxdWVzdEluaXQgPSB7XHJcbiAgICAgICAgbWV0aG9kOiAnR0VUJyxcclxuICAgICAgICBoZWFkZXJzOiBoZWFkZXJzLFxyXG4gICAgICAgIHJlZGlyZWN0OiAnZm9sbG93J1xyXG4gICAgfVxyXG5cclxuICAgIC8vIG1heGltdW0gZXJyb3IgaGFuZGxpbmcgdG8gbWFpbnRhaW4gc3RhYmlsaXR5XHJcbiAgICB0cnkge1xyXG5cclxuICAgICAgICAvLyBleGVjdXRlIHJlcXVlc3QsIGZvbGxvd3MgcmVkaXJlY3RzLCBleHBlY3RzIGpzb25cclxuICAgICAgICBmZXRjaCh1cmwsIG9wdGlvbnMpXHJcbiAgICAgICAgICAgIC50aGVuKGJvZHkgPT4gYm9keS5qc29uKCkpXHJcbiAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IGNhbGxiYWNrKHJlc3BvbnNlKSlcclxuICAgICAgICAgICAgLmNhdGNoKGVycm9yID0+IGNhbGxiYWNrKGVycm9yLCB0cnVlKSk7XHJcblxyXG4gICAgfSBjYXRjaChlcnJvcikge1xyXG4gICAgICAgIGNhbGxiYWNrKGVycm9yLCB0cnVlKTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG4vKipcclxuICogRXhlY3V0ZSBIVFRQIEdFVCByZXF1ZXN0LCB3aXRoIGZldGNoIGFwaSBhcyBKU09OLlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIC0gVXJsIHJlbGF0aXZlIHRvIHJvb3QsIGZvciBvdXRzaWRlIHVzZSBgaHR0cChzKTovL2BcclxuICogQHBhcmFtIHtvYmplY3R9IGRhdGEgLSBQYXJzZSBhIEphdmFTY3JpcHQgb2JqZWN0IGFzIHJlcXVzdCBib2R5XHJcbiAqIEBwYXJhbSB7KHJlc3BvbnNlOiBvYmplY3QpID0+IHZvaWR9IGNhbGxiYWNrIC0gQ2FsbGJhY2sgZnVuY3Rpb24gZm9yIGhhbmRsaW5nIHRoZSByZXNwb25zZVxyXG4gKi9cclxuXHJcbmV4cG9ydCBjb25zdCBwb3N0ID0gKHVybDogc3RyaW5nLCBkYXRhOiBvYmplY3QsIGNhbGxiYWNrOiAocmVzcG9uc2U6IG9iamVjdCwgZXJyb3I/OiBib29sZWFuKSA9PiB2b2lkKSA9PiB7XHJcbiAgICBcclxuICAgIC8vIHNldHRpbmcgdXAgcmVxdWVzdCBhbmQgYm9keVxyXG5cclxuICAgIGNvbnN0IGJvZHkgPSBKU09OLnN0cmluZ2lmeShkYXRhKTtcclxuXHJcbiAgICBjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnMoKTtcclxuXHJcbiAgICBoZWFkZXJzLmFwcGVuZChcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL2pzb25cIik7XHJcblxyXG5cclxuXHJcbiAgICAvLyBtYXhpbXVtIGVycm9yIGhhbmRsaW5nIHRvIG1haW50YWluIHN0YWJpbGl0eVxyXG4gICAgdHJ5IHtcclxuXHJcbiAgICAgICAgLy8gZXhlY3V0ZSByZXF1ZXN0LCBmb2xsb3dzIHJlZGlyZWN0cywgZXhwZWN0cyBqc29uXHJcbiAgICAgICAgZmV0Y2godXJsLCB7bWV0aG9kOiAnUE9TVCcsIGhlYWRlcnM6IGhlYWRlcnMsIGJvZHk6IGJvZHksIHJlZGlyZWN0OiAnZm9sbG93J30pXHJcbiAgICAgICAgICAgIC50aGVuKGJvZHkgPT4gYm9keS5qc29uKCkpXHJcbiAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IGNhbGxiYWNrKHJlc3BvbnNlKSlcclxuICAgICAgICAgICAgLmNhdGNoKGVycm9yID0+IGNhbGxiYWNrKGVycm9yLCB0cnVlKSk7XHJcblxyXG4gICAgfSBjYXRjaChlcnJvcikge1xyXG4gICAgICAgIGNhbGxiYWNrKGVycm9yLCB0cnVlKTtcclxuICAgIH1cclxuXHJcbn0iLCJpbXBvcnQgeyBnZXQsIGhvc3RuYW1lIH0gZnJvbSBcIi4vYWpheFwiXHJcbmltcG9ydCB7IGh0bWxFbGVtZW50cyB9IGZyb20gXCIuL2RvbVwiXHJcbmltcG9ydCB7IGRpc3BsYXlNZXNzYWdlIH0gZnJvbSBcIi4vbWVzc2FnZUhhbmRsZXJcIlxyXG5pbXBvcnQgeyBkaXNwbGF5Rm9ybSB9IGZyb20gXCIuL3BvcHVwSGFuZGxlclwiXHJcblxyXG5sZXQgY3VycmVudFJvb21CdXR0b246IEhUTUxCdXR0b25FbGVtZW50O1xyXG5cclxuZXhwb3J0IGNvbnN0IHVzZVJvb21IYW5kbGVyID0gKCkgPT4ge1xyXG4gICAgaHRtbEVsZW1lbnRzLmNyZWF0ZVJvb20uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgZGlzcGxheUZvcm0oJ2NyZWF0ZVJvb20nKVxyXG4gICAgfSlcclxuICAgIHVwZGF0ZVJvb21zKCk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCB1cGRhdGVSb29tcyA9ICgpID0+IHtcclxuICAgIGh0bWxFbGVtZW50cy5yb29tTGlzdC5pbm5lckhUTUwgPSAnJztcclxuICAgIGxldCB0b2tlbiA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJylcclxuICAgIGlmICghdG9rZW4pIHJldHVybjtcclxuXHJcbiAgICBnZXQoaG9zdG5hbWUgKyAnL2FwaS9yb29tcy9nZXR1c2VyJywgKHVzZXJSZXNwb25zZTogYW55KSA9PiB7XHJcbiAgICAgICAgaWYgKCF1c2VyUmVzcG9uc2Uuc3VjY2VzcykgcmV0dXJuIGNvbnNvbGUud2FybihgZXJyb3IgZ2V0dGluZyB1c2VyOiAke3VzZXJSZXNwb25zZS5yZXNwb25zZX1gKTtcclxuXHJcbiAgICAgICAgZ2V0KGhvc3RuYW1lICsgJy9hcGkvcm9vbXMvZ2V0bGlzdCcsIChyb29tUmVzcG9uc2U6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIXJvb21SZXNwb25zZS5zdWNjZXNzKSByZXR1cm4gY29uc29sZS53YXJuKGBlcnJvciBnZXR0aW5nIHJvb21saXN0OiAke3Jvb21SZXNwb25zZS5yZXNwb25zZX1gKVxyXG5cclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByb29tUmVzcG9uc2Uucm9vbXMubGVuZ3RoOyBpKyspIHtcclxuXHJcbiAgICAgICAgICAgICAgICBsZXQgYnV0dG9uID0gPEhUTUxCdXR0b25FbGVtZW50PmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpXHJcbiAgICAgICAgICAgICAgICBidXR0b24uY2xhc3NOYW1lID0gJ3Jvb20nO1xyXG4gICAgICAgICAgICAgICAgYnV0dG9uLnRleHRDb250ZW50ID0gcm9vbVJlc3BvbnNlLnJvb21zW2ldLm5hbWU7XHJcbiAgICAgICAgICAgICAgICBodG1sRWxlbWVudHMucm9vbUxpc3QuYXBwZW5kQ2hpbGQoYnV0dG9uKVxyXG5cclxuICAgICAgICAgICAgICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudFJvb21CdXR0b24gIT0gYnV0dG9uKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRSb29tQnV0dG9uLmNsYXNzTmFtZSA9ICdyb29tJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnV0dG9uLmNsYXNzTmFtZSA9ICdyb29tIGFjdGl2ZSc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRSb29tQnV0dG9uID0gYnV0dG9uO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCdyb29tSWQnLCByb29tUmVzcG9uc2Uucm9vbXNbaV0ucm9vbUlkKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5TWVzc2FnZShyb29tUmVzcG9uc2Uucm9vbXNbaV0pICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKGkgPT09IDAgJiYgKCFzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdyb29tSWQnKSB8fCBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdyb29tSWQnKSA9PT0gJ3VuZGVmaW5lZCcpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYnV0dG9uLmNsYXNzTmFtZSA9ICdyb29tIGFjdGl2ZSc7XHJcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFJvb21CdXR0b24gPSBidXR0b247XHJcbiAgICAgICAgICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgncm9vbUlkJywgcm9vbVJlc3BvbnNlLnJvb21zW2ldLnJvb21JZClcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5TWVzc2FnZShyb29tUmVzcG9uc2Uucm9vbXNbaV0pICAgIFxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChyb29tUmVzcG9uc2Uucm9vbXNbaV0ucm9vbUlkID09PSBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdyb29tSWQnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGJ1dHRvbi5jbGFzc05hbWUgPSAncm9vbSBhY3RpdmUnO1xyXG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRSb29tQnV0dG9uID0gYnV0dG9uO1xyXG4gICAgICAgICAgICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ3Jvb21JZCcsIHJvb21SZXNwb25zZS5yb29tc1tpXS5yb29tSWQpXHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheU1lc3NhZ2Uocm9vbVJlc3BvbnNlLnJvb21zW2ldKVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSwge3Rva2VuOiB0b2tlbiwgcm9vbXM6IHVzZXJSZXNwb25zZS5yb29tc30pXHJcbiAgICB9LCB7dG9rZW46IHRva2VuLCByZWxhdGlvbjogWydqb2luZWQnLCAnY3JlYXRlZCddLCB0eXBlczogWydwdWJsaWMnLCAnaGlkZGVuJywgJ3ByaXZhdGUnXX0pXHJcbn0iLCJleHBvcnQgY29uc3QgaHRtbEVsZW1lbnRzID0ge1xyXG4gICAgJ2NyZWF0ZVJvb20nOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY3JlYXRlLXJvb20nKSEsXHJcbiAgICAncm9vbVNlYXJjaCc6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb29tLXNlYXJjaCcpISxcclxuICAgICdyb29tTGlzdCc6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb29tLWxpc3QtY29udGFpbmVyJykhLFxyXG4gICAgJ3VzZXJuYW1lRGlzcGxheSc6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd1c2VybmFtZS1kaXNwbGF5JykhLFxyXG4gICAgJ2xvZ091dCc6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsb2ctb3V0JykhLFxyXG4gICAgJ3Jvb21UaXRsZSc6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb29tLXRpdGxlJykhLFxyXG4gICAgJ2NoYXRMaXN0JzogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NoYXQtbGlzdC1jb250YWluZXInKSEsXHJcbiAgICAnY2hhdEZpZWxkJzogPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NoYXQtZmllbGQnKSEsXHJcbiAgICAncG9wdXAnOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncG9wdXAnKSEsXHJcbiAgICAncG9wdXBGb3JtJzogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BvcHVwLWZvcm0nKSEsXHJcbn0iLCJpbXBvcnQgeyBnZXQsIGhvc3RuYW1lLCBwb3N0IH0gZnJvbSBcIi4vYWpheFwiXHJcbmltcG9ydCB7IGh0bWxFbGVtZW50cyB9IGZyb20gXCIuL2RvbVwiXHJcblxyXG5leHBvcnQgY29uc3QgdXNlTWVzc2FnZUhhbmRsZXIgPSAoKSA9PiB7XHJcbiAgICBodG1sRWxlbWVudHMuY2hhdEZpZWxkLmFkZEV2ZW50TGlzdGVuZXIoJ2tleXByZXNzJywgKGV2ZW50OiBLZXlib2FyZEV2ZW50KSA9PiB7XHJcbiAgICAgICAgaWYgKCFzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdyb29tSWQnKSB8fCBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdyb29tSWQnKSA9PT0gJ3VuZGVmaW5lZCcpIHJldHVybjtcclxuICAgICAgICBpZiAoZXZlbnQua2V5ID09PSAnRW50ZXInKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3Jvb21JZCcpKVxyXG4gICAgICAgICAgICBwb3N0KGhvc3RuYW1lICsgJy9hcGkvbWVzc2FnZXMvcG9zdCcsIHtcclxuICAgICAgICAgICAgICAgIHRva2VuOiBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpLFxyXG4gICAgICAgICAgICAgICAgcm9vbUlkOiBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdyb29tSWQnKSxcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGh0bWxFbGVtZW50cy5jaGF0RmllbGQudmFsdWUsXHJcbiAgICAgICAgICAgIH0sIChyZXNwb25zZTogYW55KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3VjY2VzcyAmJiByZXNwb25zZS5yZXNwb25zZSA9PT0gJ3N1Y2Nlc3MnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNoYXRFbGVtZW50ID0gPEhUTUxFbGVtZW50PmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXHJcbiAgICAgICAgICAgICAgICAgICAgY2hhdEVsZW1lbnQudGV4dENvbnRlbnQgPSBodG1sRWxlbWVudHMuY2hhdEZpZWxkLnZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGNoYXRFbGVtZW50LmNsYXNzTmFtZSA9IFwiY2hhdCByaWdodFwiICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIGh0bWxFbGVtZW50cy5jaGF0TGlzdC5hcHBlbmRDaGlsZChjaGF0RWxlbWVudCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgfSlcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGRpc3BsYXlNZXNzYWdlID0gKGRhdGE6IGFueSkgPT4ge1xyXG4gICAgaHRtbEVsZW1lbnRzLnJvb21UaXRsZS50ZXh0Q29udGVudCA9IGRhdGEubmFtZTtcclxuICAgIGh0bWxFbGVtZW50cy5jaGF0TGlzdC5pbm5lckhUTUwgPSAnJ1xyXG4gICAgZ2V0KGhvc3RuYW1lICsgJy9hcGkvbWVzc2FnZXMvZ2V0bGlzdCcsIChyZXNwb25zZTogYW55KSA9PiB7XHJcbiAgICAgICAgZm9yIChsZXQgbWVzc2FnZSBpbiByZXNwb25zZS5tZXNzYWdlcykge1xyXG4gICAgICAgICAgICBsZXQgY2hhdEVsZW1lbnQgPSA8SFRNTEVsZW1lbnQ+ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcclxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLm1lc3NhZ2VzW21lc3NhZ2VdLmF1dGhvciA9PT0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgndXNlcklkJykpIHtcclxuICAgICAgICAgICAgICAgIGNoYXRFbGVtZW50LnRleHRDb250ZW50ID0gcmVzcG9uc2UubWVzc2FnZXNbbWVzc2FnZV0ubWVzc2FnZTtcclxuICAgICAgICAgICAgICAgIGNoYXRFbGVtZW50LmNsYXNzTmFtZSA9IFwiY2hhdCByaWdodFwiXHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjaGF0RWxlbWVudC50ZXh0Q29udGVudCA9ICdbJyArIHJlc3BvbnNlLm1lc3NhZ2VzW21lc3NhZ2VdLmF1dGhvciArICddOiAnICsgcmVzcG9uc2UubWVzc2FnZXNbbWVzc2FnZV0ubWVzc2FnZTtcclxuICAgICAgICAgICAgICAgIGNoYXRFbGVtZW50LmNsYXNzTmFtZSA9IFwiY2hhdCBsZWZ0XCJcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBodG1sRWxlbWVudHMuY2hhdExpc3QuYXBwZW5kQ2hpbGQoY2hhdEVsZW1lbnQpO1xyXG4gICAgICAgIH1cclxuICAgIH0sIHttZXNzYWdlczogZGF0YS5tZXNzYWdlc30pXHJcbn0iLCJpbXBvcnQgeyBodG1sRWxlbWVudHMgfSBmcm9tIFwiLi9kb21cIjtcclxuaW1wb3J0IHsgZGlzcGxheUZvcm0gfSBmcm9tIFwiLi9wb3B1cEhhbmRsZXJcIjtcclxuaW1wb3J0IHsgaG9zdG5hbWUgfSBmcm9tICcuL2FqYXgnO1xyXG5pbXBvcnQgeyB1c2VSb29tSGFuZGxlciB9IGZyb20gXCIuL3Jvb21IYW5kbGVyXCI7XHJcbmltcG9ydCB7IHVzZVVzZXJIYW5kbGVyIH0gZnJvbSBcIi4vdXNlckhhbmRsZXJcIjtcclxuaW1wb3J0IHsgdXNlTWVzc2FnZUhhbmRsZXIgfSBmcm9tIFwiLi9tZXNzYWdlSGFuZGxlclwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGZvcm1EYXRhOiBhbnkgPSB7XHJcbiAgICBsb2dpbjoge1xyXG4gICAgICAgIHRpdGxlOiAnbG9naW4nLFxyXG4gICAgICAgIG9iamVjdHM6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgbmFtZTogJ3VzZXJuYW1lJyxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgbmFtZTogJ3Bhc3N3b3JkJyxcclxuICAgICAgICAgICAgICAgIHR5cGU6ICdwYXNzd29yZCcsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdLFxyXG4gICAgICAgIGFwaTogaG9zdG5hbWUgKyAnL2FwaS91c2Vycy9sb2dpbicsXHJcbiAgICAgICAgY3JlYXRlZDogKCkgPT4ge1xyXG4gICAgICAgICAgICBsZXQgYnV0dG9uID0gPEhUTUxFbGVtZW50PmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcclxuICAgICAgICAgICAgYnV0dG9uLnRleHRDb250ZW50ID0gJ3NpZ24gdXA/J1xyXG4gICAgICAgICAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5Rm9ybSgncmVnaXN0ZXInKTtcclxuICAgICAgICAgICAgfSwge29uY2U6IHRydWV9KVxyXG4gICAgICAgICAgICBodG1sRWxlbWVudHMucG9wdXBGb3JtLmFwcGVuZENoaWxkKGJ1dHRvbik7ICAgIFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY29tcGxldGVkOiAocmVzcG9uc2U6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCd1c2VybmFtZScsIHJlc3BvbnNlLnVzZXJuYW1lKTtcclxuICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgndXNlcklkJywgcmVzcG9uc2UudXNlcklkKTtcclxuICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgndG9rZW4nLCByZXNwb25zZS50b2tlbik7XHJcbiAgICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0oJ3Jvb21JZCcpXHJcblxyXG4gICAgICAgICAgICB1c2VSb29tSGFuZGxlcigpO1xyXG4gICAgICAgICAgICB1c2VVc2VySGFuZGxlcigpO1xyXG4gICAgICAgICAgICB1c2VNZXNzYWdlSGFuZGxlcigpO1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgcmVnaXN0ZXI6IHtcclxuICAgICAgICB0aXRsZTogJ3JlZ2lzdGVyJyxcclxuICAgICAgICBvYmplY3RzOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIG5hbWU6ICd1c2VybmFtZScsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIG5hbWU6ICdlbWFpbCcsXHJcbiAgICAgICAgICAgICAgICB0eXBlOiAnZW1haWwnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIG5hbWU6ICdwYXNzd29yZCcsXHJcbiAgICAgICAgICAgICAgICB0eXBlOiAncGFzc3dvcmQnLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXSxcclxuICAgICAgICBhcGk6IGhvc3RuYW1lICsgJy9hcGkvdXNlcnMvcmVnaXN0ZXInLFxyXG4gICAgICAgIGNyZWF0ZWQ6ICgpID0+IHtcclxuICAgICAgICAgICAgbGV0IGJ1dHRvbiA9IDxIVE1MRWxlbWVudD5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XHJcbiAgICAgICAgICAgIGJ1dHRvbi50ZXh0Q29udGVudCA9ICdsb2dpbj8nXHJcbiAgICAgICAgICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXlGb3JtKCdsb2dpbicpO1xyXG4gICAgICAgICAgICB9LCB7b25jZTogdHJ1ZX0pXHJcbiAgICAgICAgICAgIGh0bWxFbGVtZW50cy5wb3B1cEZvcm0uYXBwZW5kQ2hpbGQoYnV0dG9uKTsgICAgICBcclxuICAgICAgICB9LFxyXG4gICAgICAgIGNvbXBsZXRlZDogKCkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gZGlzcGxheUZvcm0oJ2xvZ2luJylcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIGNyZWF0ZVJvb206IHtcclxuICAgICAgICB0aXRsZTogJ2NyZWF0ZSByb29tJyxcclxuICAgICAgICBvYmplY3RzOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIG5hbWU6ICduYW1lJyxcclxuICAgICAgICAgICAgICAgIGxhYmVsOiAncm9vbSBuYW1lJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiAnZGVzY3JpcHRpb24nLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiAnc3RhdHVzJyxcclxuICAgICAgICAgICAgICAgIGxhYmVsOiAndHlwZSAocHVibGljL2hpZGRlbi9wcml2YXRlKSdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgbmFtZTogJ3Bhc3N3b3JkIChsZWF2ZSBibGFuayBpZiBwdWJsaWMpJyxcclxuICAgICAgICAgICAgICAgIHR5cGU6ICdwYXNzd29yZCcsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdLFxyXG4gICAgICAgIGFwaTogaG9zdG5hbWUgKyAnL2FwaS9yb29tcy9jcmVhdGUnLFxyXG4gICAgICAgIGNyZWF0ZWQ6ICgpID0+IHtcclxuICAgICAgICAgICAgbGV0IGJ1dHRvbiA9IDxIVE1MQnV0dG9uRWxlbWVudD5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuICAgICAgICAgICAgYnV0dG9uLnRleHRDb250ZW50ID0gJ2NhbmNlbCdcclxuICAgICAgICAgICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaHRtbEVsZW1lbnRzLnBvcHVwRm9ybS5pbm5lckhUTUwgPSAnJztcclxuICAgICAgICAgICAgICAgIGh0bWxFbGVtZW50cy5wb3B1cC5jbGFzc05hbWUgPSAnaGlkZGVuJztcclxuICAgICAgICAgICAgfSwge29uY2U6IHRydWV9KVxyXG4gICAgICAgICAgICBodG1sRWxlbWVudHMucG9wdXBGb3JtLmFwcGVuZENoaWxkKGJ1dHRvbik7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGpvaW5Sb29tOiB7XHJcbiAgICAgICAgdGl0bGU6ICdqb2luIHJvb20nLFxyXG4gICAgICAgIG9iamVjdHM6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgbmFtZTogJ3Bhc3N3b3JkJyxcclxuICAgICAgICAgICAgICAgIHR5cGU6ICdwYXNzd29yZCcsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdLFxyXG4gICAgICAgIGFwaTogaG9zdG5hbWUgKyAnL2FwaS9yb29tcy9qb2luJyxcclxuICAgIH1cclxufSIsImltcG9ydCB7IHBvc3QgfSBmcm9tICcuL2FqYXgnXHJcbmltcG9ydCB7IGh0bWxFbGVtZW50cyB9IGZyb20gJy4vZG9tJ1xyXG5pbXBvcnQgeyBmb3JtRGF0YSB9IGZyb20gJy4vZm9ybURhdGEnXHJcblxyXG5leHBvcnQgY29uc3QgZGlzcGxheUZvcm0gPSAobmFtZTogc3RyaW5nLCBtZXNzYWdlPzogc3RyaW5nKSA9PiB7XHJcbiAgICBodG1sRWxlbWVudHMucG9wdXAuY2xhc3NOYW1lID0gJyc7XHJcbiAgICBpZiAoIWZvcm1EYXRhW25hbWVdKSB7XHJcbiAgICAgICAgaHRtbEVsZW1lbnRzLnBvcHVwRm9ybS5pbm5lckhUTUwgPSBgZm9ybSBpbnB1dHMgb2YgbmFtZSAke25hbWV9IG5vdCBhdmFpbGFibGUuYDtcclxuICAgICAgICBjb25zb2xlLmVycm9yKGBmb3JtIGlucHV0cyBvZiBuYW1lICR7bmFtZX0gbm90IGF2YWlsYWJsZS5gKTtcclxuICAgIH1cclxuICAgIGh0bWxFbGVtZW50cy5wb3B1cEZvcm0uaW5uZXJIVE1MID0gZm9ybURhdGFbbmFtZV0udGl0bGUgKyAobWVzc2FnZSA/ICdcXG4nICsgbWVzc2FnZSA6ICcnKTtcclxuXHJcbiAgICBsZXQgZm9ybUlucHV0cyA9IGZvcm1EYXRhW25hbWVdLm9iamVjdHM7XHJcbiAgICBsZXQgaW5wdXRPYmplY3RzOiB7IFtrZXk6IHN0cmluZ10gOiBIVE1MSW5wdXRFbGVtZW50fSA9IHt9XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBmb3JtSW5wdXRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgbGV0IHRlbXBJZCA9IGB0ZW1wLSR7Zm9ybUlucHV0c1tpXS5uYW1lfS0oJHtNYXRoLnJhbmRvbSgpfSlgXHJcblxyXG4gICAgICAgIGxldCBsYWJlbCA9IDxIVE1MTGFiZWxFbGVtZW50PmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XHJcbiAgICAgICAgbGFiZWwuaHRtbEZvciA9IHRlbXBJZDtcclxuICAgICAgICBsYWJlbC50ZXh0Q29udGVudCA9IGZvcm1JbnB1dHNbaV0ubGFiZWwgfHwgZm9ybUlucHV0c1tpXS5uYW1lO1xyXG5cclxuICAgICAgICBsZXQgaW5wdXRFbGVtZW50ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcclxuICAgICAgICBpbnB1dEVsZW1lbnQuaWQgPSB0ZW1wSWQ7XHJcbiAgICAgICAgaW5wdXRFbGVtZW50LnBsYWNlaG9sZGVyID0gJy4uLic7XHJcbiAgICAgICAgaW5wdXRFbGVtZW50LnR5cGUgPSBmb3JtSW5wdXRzW2ldLnR5cGUgfHwgJ3RleHQnLFxyXG5cclxuICAgICAgICBodG1sRWxlbWVudHMucG9wdXBGb3JtLmFwcGVuZChsYWJlbCwgaW5wdXRFbGVtZW50KTtcclxuICAgICAgICBpbnB1dE9iamVjdHNbZm9ybUlucHV0c1tpXS5uYW1lXSA9IGlucHV0RWxlbWVudDtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoZm9ybURhdGFbbmFtZV0uY3JlYXRlZClcclxuICAgICAgICBmb3JtRGF0YVtuYW1lXS5jcmVhdGVkKCk7XHJcblxyXG4gICAgLy8gc3VibWl0IGJ1dHRvblxyXG4gICAgXHJcbiAgICBsZXQgc3VibWl0QnV0dG9uID0gPEhUTUxCdXR0b25FbGVtZW50PmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xyXG4gICAgc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gZm9ybURhdGFbbmFtZV0udGl0bGU7XHJcbiAgICBodG1sRWxlbWVudHMucG9wdXBGb3JtLmFwcGVuZENoaWxkKHN1Ym1pdEJ1dHRvbilcclxuXHJcbiAgICBzdWJtaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgbGV0IGRhdGE6IHsgW2ZpZWxkOiBzdHJpbmddOiBhbnkgfSA9IHtcclxuICAgICAgICAgICAgdG9rZW46IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJyksXHJcbiAgICAgICAgfTtcclxuICAgICAgICBmb3IgKGxldCBmaWVsZCBpbiBpbnB1dE9iamVjdHMpIHtcclxuICAgICAgICAgICAgZGF0YVtmaWVsZF0gPSBpbnB1dE9iamVjdHNbZmllbGRdLnZhbHVlXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwb3N0KGZvcm1EYXRhW25hbWVdLmFwaSwgZGF0YSwgKHJlc3BvbnNlOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5zdWNjZXNzKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZGlzcGxheUZvcm0obmFtZSwgcmVzcG9uc2UucmVzcG9uc2UpXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGh0bWxFbGVtZW50cy5wb3B1cC5jbGFzc05hbWUgPSBcImhpZGRlblwiO1xyXG4gICAgICAgICAgICBpZiAoZm9ybURhdGFbbmFtZV0uY29tcGxldGVkKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZvcm1EYXRhW25hbWVdLmNvbXBsZXRlZChyZXNwb25zZSk7XHJcbiAgICAgICAgfSlcclxuICAgIH0sIHtvbmNlOiB0cnVlfSlcclxuXHJcbiAgICByZXR1cm4gdHJ1ZTtcclxufSIsImltcG9ydCB7IGhvc3RuYW1lLCBwb3N0IH0gZnJvbSBcIi4vYWpheFwiXHJcbmltcG9ydCB7IGh0bWxFbGVtZW50cyB9IGZyb20gXCIuL2RvbVwiXHJcbmltcG9ydCB7IGRpc3BsYXlGb3JtIH0gZnJvbSBcIi4vcG9wdXBIYW5kbGVyXCJcclxuXHJcbmV4cG9ydCBjb25zdCB1c2VVc2VySGFuZGxlciA9ICgpID0+IHtcclxuICAgIGlmIChzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd1c2VybmFtZScpKSBodG1sRWxlbWVudHMudXNlcm5hbWVEaXNwbGF5LnRleHRDb250ZW50ID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgndXNlcm5hbWUnKTtcclxuXHJcbiAgICBodG1sRWxlbWVudHMubG9nT3V0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgIGlmIChzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpKSB7XHJcbiAgICAgICAgICAgIHBvc3QoaG9zdG5hbWUgKyAnL2FwaS91c2Vycy9sb2dvdXQnLCB7dG9rZW46IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJyl9LCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBodG1sRWxlbWVudHMucm9vbUxpc3QuaW5uZXJIVE1MID0gJyc7XHJcbiAgICAgICAgICAgICAgICBodG1sRWxlbWVudHMuY2hhdExpc3QuaW5uZXJIVE1MID0gJyc7XHJcbiAgICAgICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKCd0b2tlbicpXHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5Rm9ybSgnbG9naW4nKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICB9KVxyXG59IiwiaW1wb3J0IHsgaG9zdG5hbWUsIHBvc3QgfSBmcm9tIFwiLi9hamF4XCI7XHJcbmltcG9ydCB7IGh0bWxFbGVtZW50cyB9IGZyb20gXCIuL2RvbVwiO1xyXG5pbXBvcnQgeyB1c2VVc2VySGFuZGxlciB9IGZyb20gXCIuL3VzZXJIYW5kbGVyXCI7XHJcbmltcG9ydCB7IGRpc3BsYXlGb3JtIH0gZnJvbSBcIi4vcG9wdXBIYW5kbGVyXCI7XHJcbmltcG9ydCB7IHVzZVJvb21IYW5kbGVyIH0gZnJvbSBcIi4vcm9vbUhhbmRsZXJcIjtcclxuaW1wb3J0IHsgdXNlTWVzc2FnZUhhbmRsZXIgfSBmcm9tIFwiLi9tZXNzYWdlSGFuZGxlclwiO1xyXG5cclxuY29uc3Qgc3RhcnQgPSAoKSA9PiB7XHJcbiAgICBpZiAoc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKSkge1xyXG4gICAgICAgIHBvc3QoaG9zdG5hbWUgKyAnL2FwaS91c2Vycy9jaGVja3Rva2VuJywge3Rva2VuOiBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpfSwgKHJlc3BvbnNlOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgaWYgKCEocmVzcG9uc2Uuc3VjY2VzcyA9PT0gdHJ1ZSAmJiByZXNwb25zZS5yZXNwb25zZSA9PT0gJ3N1Y2Nlc3MnKSkge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheUZvcm0oJ2xvZ2luJywgcmVzcG9uc2UucmVzcG9uc2UgPT09ICdleHBpcmVkJyA/ICdzZXNzaW9uIGV4cGlyZWQnIDogdW5kZWZpbmVkKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHVzZVJvb21IYW5kbGVyKCk7XHJcbiAgICAgICAgICAgICAgICB1c2VVc2VySGFuZGxlcigpO1xyXG4gICAgICAgICAgICAgICAgdXNlTWVzc2FnZUhhbmRsZXIoKTtcclxuICAgICAgICAgICAgICAgIGh0bWxFbGVtZW50cy5wb3B1cC5jbGFzc05hbWUgPSAnaGlkZGVuJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGRpc3BsYXlGb3JtKCdsb2dpbicpXHJcbiAgICB9XHJcbn1cclxuXHJcbnN0YXJ0KCk7Il0sInNvdXJjZVJvb3QiOiIifQ==