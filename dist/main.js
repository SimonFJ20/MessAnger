(()=>{"use strict";var e="http://172.16.115.168:80",t={createRoom:document.getElementById("create-room"),roomSearch:document.getElementById("room-search"),roomList:document.getElementById("room-list-container"),usernameDisplay:document.getElementById("username-display"),logOut:document.getElementById("log-out"),roomTitle:document.getElementById("room-title"),chatList:document.getElementById("chat-list-container"),chatField:document.getElementById("chat-field"),popup:document.getElementById("popup"),popupForm:document.getElementById("popup-form")},n={login:{title:"login",objects:[{name:"username"},{name:"password",type:"password"}],api:e+"/api/users/login",created:function(){var e=document.createElement("a");e.textContent="sign up?",e.addEventListener("click",(function(){o("register")}),{once:!0}),t.popupForm.appendChild(e)}},register:{title:"register",objects:[{name:"username"},{name:"email",type:"mail"},{name:"password",type:"password"}],api:e+"/api/users/register",created:function(){var e=document.createElement("a");e.textContent="login?",e.addEventListener("click",(function(){o("login")}),{once:!0}),t.popupForm.appendChild(e)},completed:function(){o("login")}},createRoom:{title:"create room",objects:[{name:"name"},{name:"password",type:"password"}],api:e+"/api/rooms/create",completed:function(){}},joinRoom:{title:"join room",objects:[{name:"password",type:"password"}],api:e+"/api/rooms/join",completed:function(){}}},o=function(e,a){t.popup.className="",n[e]||(t.popupForm.innerHTML="form inputs of name "+e+" not available.",console.error("form inputs of name "+e+" not available.")),t.popupForm.innerHTML=n[e].title+(a?"\n"+a:"");for(var r=n[e].objects,p={},m=0;m<r.length;m++){var c="temp-"+r[m].name+"-("+Math.random()+")",i=document.createElement("label");i.htmlFor=c,i.textContent=r[m].name;var d=document.createElement("input");d.id=c,d.placeholder="...",d.type=r[m].type||"text",t.popupForm.append(i,d),p[r[m].name]=d}n[e].created&&n[e].created();var l=document.createElement("button");return l.textContent=n[e].title,t.popupForm.appendChild(l),l.addEventListener("click",(function(){var a={};for(var r in p)a[r]=p[r].value;!function(e,t,n){var o=JSON.stringify(t),a=new Headers;a.append("Content-Type","application/json");try{fetch(e,{method:"POST",headers:a,body:o,redirect:"follow"}).then((function(e){return e.json()})).then((function(e){return n(e)})).catch((function(e){return n(e)}))}catch(e){n(e)}}(n[e].api,a,(function(a){a.success?(t.popup.className="hidden",n[e].completed&&n[e].completed()):o(e,a.response)}))}),{once:!0}),!0};o("login")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9td29ya2pzLWFwcC8uL3NyYy9hamF4LnRzIiwid2VicGFjazovL2Zyb213b3JranMtYXBwLy4vc3JjL2h0bWxFbGVtZW50cy50cyIsIndlYnBhY2s6Ly9mcm9td29ya2pzLWFwcC8uL3NyYy9mb3JtRGF0YS50cyIsIndlYnBhY2s6Ly9mcm9td29ya2pzLWFwcC8uL3NyYy9wb3B1cEhhbmRsZXIudHMiLCJ3ZWJwYWNrOi8vZnJvbXdvcmtqcy1hcHAvLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOlsiaG9zdG5hbWUiLCJodG1sRWxlbWVudHMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiZm9ybURhdGEiLCJsb2dpbiIsInRpdGxlIiwib2JqZWN0cyIsIm5hbWUiLCJ0eXBlIiwiYXBpIiwiY3JlYXRlZCIsImJ1dHRvbiIsImNyZWF0ZUVsZW1lbnQiLCJ0ZXh0Q29udGVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJkaXNwbGF5Rm9ybSIsIm9uY2UiLCJwb3B1cEZvcm0iLCJhcHBlbmRDaGlsZCIsInJlZ2lzdGVyIiwiY29tcGxldGVkIiwiY3JlYXRlUm9vbSIsImpvaW5Sb29tIiwibWVzc2FnZSIsInBvcHVwIiwiY2xhc3NOYW1lIiwiaW5uZXJIVE1MIiwiY29uc29sZSIsImVycm9yIiwiZm9ybUlucHV0cyIsImlucHV0T2JqZWN0cyIsImkiLCJsZW5ndGgiLCJ0ZW1wSWQiLCJNYXRoIiwicmFuZG9tIiwibGFiZWwiLCJodG1sRm9yIiwiaW5wdXRFbGVtZW50IiwiaWQiLCJwbGFjZWhvbGRlciIsImFwcGVuZCIsInN1Ym1pdEJ1dHRvbiIsImRhdGEiLCJmaWVsZCIsInZhbHVlIiwidXJsIiwiY2FsbGJhY2siLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImhlYWRlcnMiLCJIZWFkZXJzIiwiZmV0Y2giLCJtZXRob2QiLCJyZWRpcmVjdCIsInRoZW4iLCJqc29uIiwicmVzcG9uc2UiLCJjYXRjaCIsInBvc3QiLCJzdWNjZXNzIl0s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QUFLLElBQUlDLEtBQVNkLEVBQ2RhLEVBQUtDLEdBQVNkLEVBQWFjLEdBQU9DLE9IRzFCLFNBQUNDLEVBQWFILEVBQWNJLEdBSTVDLElBQU1DLEVBQU9DLEtBQUtDLFVBQVVQLEdBRXRCUSxFQUFVLElBQUlDLFFBRXBCRCxFQUFRVixPQUFPLGVBQWdCLG9CQUsvQixJQUdJWSxNQUFNUCxFQUFLLENBQUNRLE9BQVEsT0FBUUgsUUFBU0EsRUFBU0gsS0FBTUEsRUFBTU8sU0FBVSxXQUMvREMsTUFBSyxTQUFBUixHQUFRLE9BQUFBLEVBQUtTLFVBQ2xCRCxNQUFLLFNBQUFFLEdBQVksT0FBQVgsRUFBU1csTUFDMUJDLE9BQU0sU0FBQS9CLEdBQVMsT0FBQW1CLEVBQVNuQixNQUUvQixNQUFNQSxHQUNKbUIsRUFBU25CLElHdEJUZ0MsQ0FBS3pELEVBQVNJLEdBQU1FLElBQUtrQyxHQUFNLFNBQUNlLEdBQ3ZCQSxFQUFTRyxTQUtkN0QsRUFBYXdCLE1BQU1DLFVBQVksU0FDM0J0QixFQUFTSSxHQUFNYSxXQUNmakIsRUFBU0ksR0FBTWEsYUFOZkwsRUFBWVIsRUFBTW1ELEVBQVNBLGVBUXBDLENBQUMxQyxNQUFNLEtBRUgsR0N2RFhELEVBQVksVSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogSFRUUCByZXF1ZXN0ICovXHJcblxyXG4vKipcclxuICogRXhlY3V0ZSBIVFRQIEdFVCByZXF1ZXN0LCB3aXRoIGZldGNoIGFwaSBhcyBKU09OLlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIC0gRm9yIGxvY2FsIGxvY2F0aW9uIHVzZSBgL3BhdGgvbG9jYXRpb25gLCBmb3Igb3V0c2lkZSBsb2NhdGlvbiB1c2UgYGh0dHAocyk6Ly95b3VyVVJML2xvY2F0aW9uYFxyXG4gKiBAcGFyYW0geyhyZXNwb25zZTogb2JqZWN0KSA9PiB2b2lkfSBjYWxsYmFjayAtIENhbGxiYWNrIGZ1bmN0aW9uIGZvciBoYW5kbGluZyB0aGUgcmVzcG9uc2VcclxuICogQHBhcmFtIHtvYmplY3R9IGRhdGEgLSBPcHRpb25hbCwgcGFyc2UgYSBKYXZhU2NyaXB0IG9iamVjdCBhcyByZXF1c3QgYm9keVxyXG4gKi9cclxuXHJcbiBleHBvcnQgY29uc3QgaG9zdG5hbWUgPSAnaHR0cDovLzE3Mi4xNi4xMTUuMTY4OjgwJ1xyXG5cclxuIGV4cG9ydCBjb25zdCBnZXQgPSAodXJsOiBzdHJpbmcsIGNhbGxiYWNrOiAocmVzcG9uc2U6IG9iamVjdCwgZXJyb3I/OiBib29sZWFuKSA9PiB2b2lkLCBkYXRhPzogb2JqZWN0KTogdm9pZCA9PiB7XHJcbiAgICBcclxuICAgIC8vIHNldHRpbmcgdXAgcmVxdWVzdCBhbmQgYm9keVxyXG5cclxuICAgIGNvbnN0IGJvZHkgPSBKU09OLnN0cmluZ2lmeShkYXRhKTtcclxuXHJcbiAgICBjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnMoKTtcclxuXHJcbiAgICBoZWFkZXJzLmFwcGVuZChcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL2pzb25cIik7XHJcblxyXG5cclxuXHJcbiAgICAvLyBtYXhpbXVtIGVycm9yIGhhbmRsaW5nIHRvIG1haW50YWluIHN0YWJpbGl0eVxyXG4gICAgdHJ5IHtcclxuXHJcbiAgICAgICAgLy8gZXhlY3V0ZSByZXF1ZXN0LCBmb2xsb3dzIHJlZGlyZWN0cywgZXhwZWN0cyBqc29uXHJcbiAgICAgICAgZmV0Y2godXJsLCB7bWV0aG9kOiAnR0VUJywgaGVhZGVyczogaGVhZGVycywgYm9keTogYm9keSwgcmVkaXJlY3Q6ICdmb2xsb3cnfSlcclxuICAgICAgICAgICAgLnRoZW4oYm9keSA9PiBib2R5Lmpzb24oKSlcclxuICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gY2FsbGJhY2socmVzcG9uc2UpKVxyXG4gICAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4gY2FsbGJhY2soZXJyb3IsIHRydWUpKTtcclxuXHJcbiAgICB9IGNhdGNoKGVycm9yKSB7XHJcbiAgICAgICAgY2FsbGJhY2soZXJyb3IsIHRydWUpO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuXHJcbi8qKlxyXG4gKiBFeGVjdXRlIEhUVFAgR0VUIHJlcXVlc3QsIHdpdGggZmV0Y2ggYXBpIGFzIEpTT04uXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgLSBVcmwgcmVsYXRpdmUgdG8gcm9vdCwgZm9yIG91dHNpZGUgdXNlIGBodHRwKHMpOi8vYFxyXG4gKiBAcGFyYW0ge29iamVjdH0gZGF0YSAtIFBhcnNlIGEgSmF2YVNjcmlwdCBvYmplY3QgYXMgcmVxdXN0IGJvZHlcclxuICogQHBhcmFtIHsocmVzcG9uc2U6IG9iamVjdCkgPT4gdm9pZH0gY2FsbGJhY2sgLSBDYWxsYmFjayBmdW5jdGlvbiBmb3IgaGFuZGxpbmcgdGhlIHJlc3BvbnNlXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNvbnN0IHBvc3QgPSAodXJsOiBzdHJpbmcsIGRhdGE6IG9iamVjdCwgY2FsbGJhY2s6IChyZXNwb25zZTogb2JqZWN0LCBlcnJvcj86IGJvb2xlYW4pID0+IHZvaWQpID0+IHtcclxuICAgIFxyXG4gICAgLy8gc2V0dGluZyB1cCByZXF1ZXN0IGFuZCBib2R5XHJcblxyXG4gICAgY29uc3QgYm9keSA9IEpTT04uc3RyaW5naWZ5KGRhdGEpO1xyXG5cclxuICAgIGNvbnN0IGhlYWRlcnMgPSBuZXcgSGVhZGVycygpO1xyXG5cclxuICAgIGhlYWRlcnMuYXBwZW5kKFwiQ29udGVudC1UeXBlXCIsIFwiYXBwbGljYXRpb24vanNvblwiKTtcclxuXHJcblxyXG5cclxuICAgIC8vIG1heGltdW0gZXJyb3IgaGFuZGxpbmcgdG8gbWFpbnRhaW4gc3RhYmlsaXR5XHJcbiAgICB0cnkge1xyXG5cclxuICAgICAgICAvLyBleGVjdXRlIHJlcXVlc3QsIGZvbGxvd3MgcmVkaXJlY3RzLCBleHBlY3RzIGpzb25cclxuICAgICAgICBmZXRjaCh1cmwsIHttZXRob2Q6ICdQT1NUJywgaGVhZGVyczogaGVhZGVycywgYm9keTogYm9keSwgcmVkaXJlY3Q6ICdmb2xsb3cnfSlcclxuICAgICAgICAgICAgLnRoZW4oYm9keSA9PiBib2R5Lmpzb24oKSlcclxuICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gY2FsbGJhY2socmVzcG9uc2UpKVxyXG4gICAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4gY2FsbGJhY2soZXJyb3IsIHRydWUpKTtcclxuXHJcbiAgICB9IGNhdGNoKGVycm9yKSB7XHJcbiAgICAgICAgY2FsbGJhY2soZXJyb3IsIHRydWUpO1xyXG4gICAgfVxyXG5cclxufSIsImV4cG9ydCBjb25zdCBodG1sRWxlbWVudHMgPSB7XHJcbiAgICAnY3JlYXRlUm9vbSc6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjcmVhdGUtcm9vbScpISxcclxuICAgICdyb29tU2VhcmNoJzogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb20tc2VhcmNoJykhLFxyXG4gICAgJ3Jvb21MaXN0JzogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb20tbGlzdC1jb250YWluZXInKSEsXHJcbiAgICAndXNlcm5hbWVEaXNwbGF5JzogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3VzZXJuYW1lLWRpc3BsYXknKSEsXHJcbiAgICAnbG9nT3V0JzogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xvZy1vdXQnKSEsXHJcbiAgICAncm9vbVRpdGxlJzogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb20tdGl0bGUnKSEsXHJcbiAgICAnY2hhdExpc3QnOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2hhdC1saXN0LWNvbnRhaW5lcicpISxcclxuICAgICdjaGF0RmllbGQnOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2hhdC1maWVsZCcpISxcclxuICAgICdwb3B1cCc6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwb3B1cCcpISxcclxuICAgICdwb3B1cEZvcm0nOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncG9wdXAtZm9ybScpISEsXHJcbn0iLCJpbXBvcnQgeyBodG1sRWxlbWVudHMgfSBmcm9tIFwiLi9odG1sRWxlbWVudHNcIjtcclxuaW1wb3J0IHsgZGlzcGxheUZvcm0gfSBmcm9tIFwiLi9wb3B1cEhhbmRsZXJcIjtcclxuaW1wb3J0IHsgaG9zdG5hbWUgfSBmcm9tICcuL2FqYXgnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGZvcm1EYXRhOiBhbnkgPSB7XHJcbiAgICBsb2dpbjoge1xyXG4gICAgICAgIHRpdGxlOiAnbG9naW4nLFxyXG4gICAgICAgIG9iamVjdHM6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgbmFtZTogJ3VzZXJuYW1lJyxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgbmFtZTogJ3Bhc3N3b3JkJyxcclxuICAgICAgICAgICAgICAgIHR5cGU6ICdwYXNzd29yZCcsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdLFxyXG4gICAgICAgIGFwaTogaG9zdG5hbWUgKyAnL2FwaS91c2Vycy9sb2dpbicsXHJcbiAgICAgICAgY3JlYXRlZDogKCkgPT4ge1xyXG4gICAgICAgICAgICBsZXQgYnV0dG9uID0gPEhUTUxFbGVtZW50PmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcclxuICAgICAgICAgICAgYnV0dG9uLnRleHRDb250ZW50ID0gJ3NpZ24gdXA/J1xyXG4gICAgICAgICAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5Rm9ybSgncmVnaXN0ZXInKTtcclxuICAgICAgICAgICAgfSwge29uY2U6IHRydWV9KVxyXG4gICAgICAgICAgICBodG1sRWxlbWVudHMucG9wdXBGb3JtLmFwcGVuZENoaWxkKGJ1dHRvbik7ICAgIFxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICByZWdpc3Rlcjoge1xyXG4gICAgICAgIHRpdGxlOiAncmVnaXN0ZXInLFxyXG4gICAgICAgIG9iamVjdHM6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgbmFtZTogJ3VzZXJuYW1lJyxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgbmFtZTogJ2VtYWlsJyxcclxuICAgICAgICAgICAgICAgIHR5cGU6ICdtYWlsJ1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiAncGFzc3dvcmQnLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogJ3Bhc3N3b3JkJyxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgYXBpOiBob3N0bmFtZSArICcvYXBpL3VzZXJzL3JlZ2lzdGVyJyxcclxuICAgICAgICBjcmVhdGVkOiAoKSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBidXR0b24gPSA8SFRNTEVsZW1lbnQ+ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xyXG4gICAgICAgICAgICBidXR0b24udGV4dENvbnRlbnQgPSAnbG9naW4/J1xyXG4gICAgICAgICAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5Rm9ybSgnbG9naW4nKTtcclxuICAgICAgICAgICAgfSwge29uY2U6IHRydWV9KVxyXG4gICAgICAgICAgICBodG1sRWxlbWVudHMucG9wdXBGb3JtLmFwcGVuZENoaWxkKGJ1dHRvbik7ICAgICAgXHJcbiAgICAgICAgfSxcclxuICAgICAgICBjb21wbGV0ZWQ6ICgpID0+IHtcclxuICAgICAgICAgICAgZGlzcGxheUZvcm0oJ2xvZ2luJylcclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIGNyZWF0ZVJvb206IHtcclxuICAgICAgICB0aXRsZTogJ2NyZWF0ZSByb29tJyxcclxuICAgICAgICBvYmplY3RzOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIG5hbWU6ICduYW1lJyxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgbmFtZTogJ3Bhc3N3b3JkJyxcclxuICAgICAgICAgICAgICAgIHR5cGU6ICdwYXNzd29yZCcsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdLFxyXG4gICAgICAgIGFwaTogaG9zdG5hbWUgKyAnL2FwaS9yb29tcy9jcmVhdGUnLFxyXG4gICAgICAgIGNvbXBsZXRlZDogKCkgPT4ge31cclxuICAgIH0sXHJcbiAgICBqb2luUm9vbToge1xyXG4gICAgICAgIHRpdGxlOiAnam9pbiByb29tJyxcclxuICAgICAgICBvYmplY3RzOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIG5hbWU6ICdwYXNzd29yZCcsXHJcbiAgICAgICAgICAgICAgICB0eXBlOiAncGFzc3dvcmQnLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXSxcclxuICAgICAgICBhcGk6IGhvc3RuYW1lICsgJy9hcGkvcm9vbXMvam9pbicsXHJcbiAgICAgICAgY29tcGxldGVkOiAoKSA9PiB7fSxcclxuICAgIH1cclxufVxyXG5cclxuLyogY29uc3QgY3JlYXRlTG9naW5Gb3JtID0gKCkgPT4ge1xyXG4gICAgY29uc3QgaW5wdXRGb3JtID0gbmV3IElucHV0Rm9ybSgnbG9naW4nLCAnL2FwaS91c2Vycy9sb2dpbicpO1xyXG5cclxuICAgIHJldHVybiBpbnB1dEZvcm1cclxufVxyXG5jb25zdCBjcmVhdGVSZWdpc3RlckZvcm0gPSAoKSA9PiB7fVxyXG5jb25zdCBjcmVhdGVDcmVhdGVSb29tRm9ybSA9ICgpID0+IHt9XHJcbmNvbnN0IGNyZWF0ZUpvaW5Sb29tRm9ybSA9ICgpID0+IHt9XHJcblxyXG5leHBvcnQgY2xhc3MgSW5wdXRGb3JtIHtcclxuICAgIHB1YmxpYyB0aXRsZTogc3RyaW5nO1xyXG4gICAgcHVibGljIG9iamVjdHM6IG9iamVjdFtdO1xyXG4gICAgcHVibGljIGFwaVJvdXRlOiBzdHJpbmc7XHJcblxyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKHRpdGxlOiBzdHJpbmcsIGFwaVJvdXRlOiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLnRpdGxlID0gdGl0bGU7XHJcbiAgICAgICAgdGhpcy5vYmplY3RzID0gW107XHJcbiAgICAgICAgdGhpcy5hcGlSb3V0ZSA9IGFwaVJvdXRlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBjcmVhdGVkPzogKCkgPT4gdm9pZDtcclxuICAgIHB1YmxpYyBjb21wbGV0ZWQ/OiAoKSA9PiB2b2lkO1xyXG59ICovIiwiaW1wb3J0IHsgcG9zdCB9IGZyb20gJy4vYWpheCdcclxuaW1wb3J0IHsgaHRtbEVsZW1lbnRzIH0gZnJvbSAnLi9odG1sRWxlbWVudHMnXHJcbmltcG9ydCB7IGZvcm1EYXRhIH0gZnJvbSAnLi9mb3JtRGF0YSdcclxuXHJcbmV4cG9ydCBjb25zdCBkaXNwbGF5Rm9ybSA9IChuYW1lOiBzdHJpbmcsIG1lc3NhZ2U/OiBzdHJpbmcpID0+IHtcclxuICAgIGh0bWxFbGVtZW50cy5wb3B1cC5jbGFzc05hbWUgPSAnJztcclxuICAgIGlmICghZm9ybURhdGFbbmFtZV0pIHtcclxuICAgICAgICBodG1sRWxlbWVudHMucG9wdXBGb3JtLmlubmVySFRNTCA9IGBmb3JtIGlucHV0cyBvZiBuYW1lICR7bmFtZX0gbm90IGF2YWlsYWJsZS5gO1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYGZvcm0gaW5wdXRzIG9mIG5hbWUgJHtuYW1lfSBub3QgYXZhaWxhYmxlLmApO1xyXG4gICAgfVxyXG4gICAgaHRtbEVsZW1lbnRzLnBvcHVwRm9ybS5pbm5lckhUTUwgPSBmb3JtRGF0YVtuYW1lXS50aXRsZSArIChtZXNzYWdlID8gJ1xcbicgKyBtZXNzYWdlIDogJycpO1xyXG5cclxuICAgIGxldCBmb3JtSW5wdXRzID0gZm9ybURhdGFbbmFtZV0ub2JqZWN0cztcclxuICAgIGxldCBpbnB1dE9iamVjdHM6IHsgW2tleTogc3RyaW5nXSA6IEhUTUxJbnB1dEVsZW1lbnR9ID0ge31cclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZvcm1JbnB1dHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBsZXQgdGVtcElkID0gYHRlbXAtJHtmb3JtSW5wdXRzW2ldLm5hbWV9LSgke01hdGgucmFuZG9tKCl9KWBcclxuXHJcbiAgICAgICAgbGV0IGxhYmVsID0gPEhUTUxMYWJlbEVsZW1lbnQ+ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcclxuICAgICAgICBsYWJlbC5odG1sRm9yID0gdGVtcElkO1xyXG4gICAgICAgIGxhYmVsLnRleHRDb250ZW50ID0gZm9ybUlucHV0c1tpXS5uYW1lO1xyXG5cclxuICAgICAgICBsZXQgaW5wdXRFbGVtZW50ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcclxuICAgICAgICBpbnB1dEVsZW1lbnQuaWQgPSB0ZW1wSWQ7XHJcbiAgICAgICAgaW5wdXRFbGVtZW50LnBsYWNlaG9sZGVyID0gJy4uLic7XHJcbiAgICAgICAgaW5wdXRFbGVtZW50LnR5cGUgPSBmb3JtSW5wdXRzW2ldLnR5cGUgfHwgJ3RleHQnLFxyXG5cclxuICAgICAgICBodG1sRWxlbWVudHMucG9wdXBGb3JtLmFwcGVuZChsYWJlbCwgaW5wdXRFbGVtZW50KTtcclxuICAgICAgICBpbnB1dE9iamVjdHNbZm9ybUlucHV0c1tpXS5uYW1lXSA9IGlucHV0RWxlbWVudDtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoZm9ybURhdGFbbmFtZV0uY3JlYXRlZClcclxuICAgICAgICBmb3JtRGF0YVtuYW1lXS5jcmVhdGVkKCk7XHJcblxyXG4gICAgLy8gc3VibWl0IGJ1dHRvblxyXG4gICAgXHJcbiAgICBsZXQgc3VibWl0QnV0dG9uID0gPEhUTUxCdXR0b25FbGVtZW50PmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xyXG4gICAgc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gZm9ybURhdGFbbmFtZV0udGl0bGU7XHJcbiAgICBodG1sRWxlbWVudHMucG9wdXBGb3JtLmFwcGVuZENoaWxkKHN1Ym1pdEJ1dHRvbilcclxuXHJcbiAgICBzdWJtaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgbGV0IGRhdGE6IHsgW2ZpZWxkOiBzdHJpbmddOiBhbnkgfSA9IHt9O1xyXG4gICAgICAgIGZvciAobGV0IGZpZWxkIGluIGlucHV0T2JqZWN0cykge1xyXG4gICAgICAgICAgICBkYXRhW2ZpZWxkXSA9IGlucHV0T2JqZWN0c1tmaWVsZF0udmFsdWVcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHBvc3QoZm9ybURhdGFbbmFtZV0uYXBpLCBkYXRhLCAocmVzcG9uc2U6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIXJlc3BvbnNlLnN1Y2Nlc3MpIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXlGb3JtKG5hbWUsIHJlc3BvbnNlLnJlc3BvbnNlKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGh0bWxFbGVtZW50cy5wb3B1cC5jbGFzc05hbWUgPSBcImhpZGRlblwiO1xyXG4gICAgICAgICAgICBpZiAoZm9ybURhdGFbbmFtZV0uY29tcGxldGVkKVxyXG4gICAgICAgICAgICAgICAgZm9ybURhdGFbbmFtZV0uY29tcGxldGVkKCk7XHJcbiAgICAgICAgfSlcclxuICAgIH0sIHtvbmNlOiB0cnVlfSlcclxuXHJcbiAgICByZXR1cm4gdHJ1ZTtcclxufSIsImltcG9ydCB7IGh0bWxFbGVtZW50cyB9IGZyb20gXCIuL2h0bWxFbGVtZW50c1wiO1xyXG5pbXBvcnQgeyBkaXNwbGF5Rm9ybSB9IGZyb20gXCIuL3BvcHVwSGFuZGxlclwiO1xyXG5cclxuZGlzcGxheUZvcm0oJ2xvZ2luJykiXSwic291cmNlUm9vdCI6IiJ9